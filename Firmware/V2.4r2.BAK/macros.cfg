##===========================================================================
##=========================== Macros Configuration ==========================
##===========================================================================
    # This file provides Klipper G-Code macros. The snippets in this file
    # may be copied into the main printer.cfg file and customized.

        # See docs/Config_Reference.md for a description of parameters.

    # RS, 2022 - VORON V2.4r2.
##=================================== End ===================================

##===========================================================================
##================================ Force Move ===============================
##===========================================================================
    # Moved to klicky-probe.cfg
##=================================== End ===================================

##===========================================================================
##========================== Full Auto-Calibration ==========================
##===========================================================================
[gcode_macro G32]
gcode:
    BED_MESH_CLEAR

    G28
    CLEAN_NOZZLE
    G28 Z

    QUAD_GANTRY_LEVEL
    G28
    CLEAN_NOZZLE
    G28 Z

    BED_MESH_PROFILE LOAD="STOCK"
    
    STATUS_INITIALIZING
    CALIBRATE_Z
    CLEAN_NOZZLE
    G28 Z
##=================================== End ===================================

##===========================================================================
##================================= Pre-Heat ================================
##===========================================================================
[gcode_macro PRE_HEAT]
gcode:
    _TEXT MSG="Pre-heat position" OUTPUT_TARGET=0
    STATUS_INITIALIZING
    M104 S0
    M140 S0

    M140 S110

    G32
    CENTER
    G0 Z10 F600

    _PRINTER_TURN_OFF
##----------------------------- Bed Temperature -----------------------------
    _TEXT MSG="Bed temperature to 110 C" OUTPUT_TARGET=0
    STATUS_HEATING

    M106 S255
    M190 S110

    _TEXT MSG="Wait 60 minutes" OUTPUT_TARGET=0
    G4 P600000
    _TEXT MSG="50 minutes left" OUTPUT_TARGET=0
    G4 P600000
    _TEXT MSG="40 minutes left" OUTPUT_TARGET=0
    G4 P600000
    _TEXT MSG="30 minutes left" OUTPUT_TARGET=0
    G4 P600000
    _TEXT MSG="20 minutes left" OUTPUT_TARGET=0
    G4 P600000
    _TEXT MSG="10 minutes left" OUTPUT_TARGET=0
    G4 P300000
##---------------------------- Hotend Temperature ---------------------------
    _TEXT MSG="Hotend temperature to 245 C" OUTPUT_TARGET=0
    STATUS_HEATING
    
    M109 S245

    _TEXT MSG="5 minutes left" OUTPUT_TARGET=0
    G4 P300000
##------------------------------ Home Position ------------------------------
    _TEXT MSG="Ready" OUTPUT_TARGET=0

    M84
    G32
    CENTER
    
    _PRINTER_TURN_OFF
    STATUS_READY
##=================================== End ===================================

##===========================================================================
##============================== Print Profile ==============================
##===========================================================================
[gcode_macro _PRINT_PROFILE]
gcode:
##--------------------------------- Default ---------------------------------
    {% if params.TYPE|default("Default") == "Default" %}
        _TEXT MSG="Print Profile : Default" OUTPUT_TARGET=0

        SET_VELOCITY_LIMIT VELOCITY=500
        SET_VELOCITY_LIMIT ACCEL=10000
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL=10000
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=10.0
##--------------------------------- Quality ---------------------------------
    {% elif params.TYPE|default("Default") == "QUALITY" %}
        _TEXT MSG="Print Profile : QUALITY" OUTPUT_TARGET=0

        SET_VELOCITY_LIMIT VELOCITY=500
        SET_VELOCITY_LIMIT ACCEL=7000
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL=3500
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=8.0
##---------------------------------- Casual ---------------------------------
    {% elif params.TYPE|default("Default") == "CASUAL" %}
        _TEXT MSG="Print Profile : CASUAL" OUTPUT_TARGET=0

        SET_VELOCITY_LIMIT VELOCITY=1000
        SET_VELOCITY_LIMIT ACCEL=10000
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL=10000
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=10.0
##---------------------------------- Speed ----------------------------------
    {% elif params.TYPE|default("Default") == "SPEED" %}
        _TEXT MSG="Print Profile : SPEED" OUTPUT_TARGET=0

        SET_VELOCITY_LIMIT VELOCITY=1000
        SET_VELOCITY_LIMIT ACCEL=25000
        SET_VELOCITY_LIMIT ACCEL_TO_DECEL=25000
        SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=20.0
    {% endif %}
##=================================== End ===================================

##===========================================================================
##============================= Filament Profile ============================
##===========================================================================
[gcode_macro _FILAMENT_PROFILE]
gcode:
##--------------------------------- Default ---------------------------------
    {% if params.TYPE|default("Default") == "Default" %}
        _TEXT MSG="Set filament profile : Default" OUTPUT_TARGET=0

        SET_PRESSURE_ADVANCE ADVANCE=0.025
        SET_PRESSURE_ADVANCE SMOOTH_TIME=0.040
        SET_RETRACTION RETRACT_LENGTH=0.0
        SET_RETRACTION UNRETRACT_EXTRA_LENGTH=0
        SET_RETRACTION RETRACT_SPEED=30
        SET_RETRACTION UNRETRACT_SPEED=30
##----------------------------------- ABS -----------------------------------
    {% elif params.TYPE|default("Default") == "ABS" %}
        _TEXT MSG="Set filament profile : ABS" OUTPUT_TARGET=0

        SET_PRESSURE_ADVANCE ADVANCE=0.05
        SET_PRESSURE_ADVANCE SMOOTH_TIME=0.040
        SET_RETRACTION RETRACT_LENGTH=0.3
        SET_RETRACTION UNRETRACT_EXTRA_LENGTH=0
        SET_RETRACTION RETRACT_SPEED=30
        SET_RETRACTION UNRETRACT_SPEED=30
##----------------------------------- ASA -----------------------------------
    {% elif params.TYPE|default("Default") == "ASA" %}
        _TEXT MSG="Set filament profile : ASA" OUTPUT_TARGET=0

        SET_PRESSURE_ADVANCE ADVANCE=0.025
        SET_PRESSURE_ADVANCE SMOOTH_TIME=0.040
        SET_RETRACTION RETRACT_LENGTH=0.0
        SET_RETRACTION UNRETRACT_EXTRA_LENGTH=0
        SET_RETRACTION RETRACT_SPEED=30
        SET_RETRACTION UNRETRACT_SPEED=30
    {% endif %}
##=================================== End ===================================

##===========================================================================
##====================== Pause, Resume, Filament Change =====================
##===========================================================================
    # Moved to custom_gcode.cfg
##=================================== End ===================================

##===========================================================================
##============================ Toolhead Movement ============================
##===========================================================================
##================================== Center =================================
[gcode_macro CENTER]
variable_position_x: 177.5
variable_position_y: 167.5
variable_speed: 500
gcode:
    QUERY_PROBE
    _DO_CENTER
##---------------------------------------------------------------------------
[gcode_macro _DO_CENTER]
gcode:
    {% set position_x = printer["gcode_macro CENTER"].position_x|float %}
    {% set position_y = printer["gcode_macro CENTER"].position_y|float %}
    {% set speed = printer["gcode_macro CENTER"].speed * 60 %}

    {% if printer.toolhead.homed_axes != 'xyz' %}
	    G32
	{% endif %}

    {% if printer.probe.last_query == 0 %}
        Dock_Probe
    {% endif %}
    
    G0 X{position_x} Y{position_y} F{speed}
##================================== Front ==================================
[gcode_macro FRONT]
variable_position_x: 177.5
variable_position_y: 0
variable_speed: 500
gcode:
    QUERY_PROBE
    _DO_FRONT
##---------------------------------------------------------------------------
[gcode_macro _DO_FRONT]
gcode:
    {% set position_x = printer["gcode_macro FRONT"].position_x|float %}
    {% set position_y = printer["gcode_macro FRONT"].position_y|float %}
    {% set speed = printer["gcode_macro FRONT"].speed * 60 %}

    {% if printer.toolhead.homed_axes != 'xyz' %}
	    G32
	{% endif %}

    {% if printer.probe.last_query == 0 %}
        Dock_Probe
    {% endif %}
    
    G0 X{position_x} Y{position_y} F{speed}
##=================================== End ===================================

##===========================================================================
##============================== Probe Accuracy =============================
##===========================================================================
    # Moved to klicky-probe.cfg
##=================================== End ===================================

##===========================================================================
##=============================== Clean Nozzle ==============================
##===========================================================================
[gcode_macro CLEAN_NOZZLE]
variable_start_x:         315
variable_start_y:         350
variable_start_z:         1.8
variable_wipe_dist:       -50
variable_wipe_qty:         10
variable_wipe_spd:        200
variable_raise_distance:   10
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}

    STATUS_INITIALIZING
    G90

    G0 X{start_x} Y{start_y} F6000
    G0 Z{start_z} F1800
    M106 S255

    {% for wipes in range(1, (wipe_qty + 1)) %}
        G0 X{start_x + wipe_dist} F{wipe_spd * 60}
        G0 X{start_x} F{wipe_spd * 60}
    {% endfor %}

    G0 Z{raise_distance}

    G90
    M106 S0
    STATUS_READY
##=================================== End ===================================

##===========================================================================
##============================== Motor Commands =============================
##===========================================================================
##================================ Motors On ================================
[gcode_macro MOTORS_ON]
gcode:
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z2 ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z3 ENABLE=1
##================================ Motors Off ===============================
[gcode_macro MOTORS_OFF]
gcode:
    M84
##=================================== End ===================================

##===========================================================================
##============================= Turn Off Printer ============================
##===========================================================================
[gcode_macro _PRINTER_TURN_OFF]
gcode:
    STATUS_OFF

    _TEXT MSG="Printer off" OUTPUT_TARGET=0

    G21
    G90
    G92 E0.0
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    MOTORS_OFF
    M107

    _PRINTER_RESET
##---------------------------------------------------------------------------
[delayed_gcode TURN_OFF_PSU]
initial_duration: 0.
gcode:
    {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
        {% if printer.extruder.temperature < 75 %}
            _PRINTER_TURN_OFF
            {action_call_remote_method("set_device_power", device="PSU", state="off")}

        {% else %}
            UPDATE_DELAYED_GCODE ID=TURN_OFF_PSU DURATION=300
        {% endif %}
    {% endif %}
##=================================== End ===================================

##===========================================================================
##========================== SDCard Looping / M808 ==========================
##===========================================================================
[sdcard_loop]
##---------------------------------------------------------------------------
[gcode_macro _M808]
gcode:
    {% if params.K is not defined and params.L is defined %}
        SDCARD_LOOP_BEGIN COUNT={params.L|int}
    {% endif %}

    {% if params.K is not defined and params.L is not defined %}
        SDCARD_LOOP_END
    {% endif %}

    {% if params.K is defined and params.L is not defined %}
        SDCARD_LOOP_DESIST
    {% endif %}
##=================================== End ===================================

##===========================================================================
##=============================== Custom Text ===============================
##===========================================================================
# OUTPUT_TARGET= 0 : Both LCD and terminal, 1 : Terminal only, 2 : LCD only
[gcode_macro _TEXT]
variable_parameter_MSG : ''
variable_parameter_OUTPUT_TARGET : 0
gcode:
    {% if params.OUTPUT_TARGET|default(0)|int == 0 %}
        M117 {params.MSG | string}
        {action_respond_info((params.MSG) | string)}

    {% elif params.OUTPUT_TARGET|default(0)|int == 1 %}
        {action_respond_info((params.MSG) | string)}

    {% else %}
        M117 {params.MSG | string}
    {% endif %}
##--------------------------------- Respond ---------------------------------
[respond]
##=================================== End ===================================

# Use:
# - DUMP_PARAMETER                       print all parameter expect configfile
# - DUMP_PARAMETER P='gcode_macro _TEST' print the defined parameter group
# - DUMP_PARAMETER C='printer'           print the defined config values
# - DUMP_PARAMETER S='printer'           print the defined settings values
[gcode_macro DUMP_PARAMETER]
description: Debug: Print entries of the printer object
gcode:
  {% set config = True if params.C or params.S else False %}
  {% set path = 'config'   if params.C 
           else 'settings' if params.S %}
  {% set search = params.C if params.C
             else params.S if params.S
             else params.P if params.P %}
  {% set out = [] %}
  {% for name1 in printer|sort %}
    {% if config %} ; print the searched printer.configfile[path] parameter
      {% if name1 is in ['configfile'] %}
        {% for name2 in printer[name1][path]|sort %}
          {% if name2 is in [search] %}
            {% for name3, value in printer[name1][path][name2].items()|sort %}
              {% set _dummy = out.append("printer.configfile.%s['%s'].%s = %s" % 
                          (path, name2, name3, value)) %}
            {% endfor %}
          {% endif %}
        {% endfor %}
      {% endif %}
    {% else %}
      {% for name2, value in printer[name1].items()|sort %} ; search for anything expext printer.configfile
        {% if search is not defined and name1 is not in ['configfile'] %} ; print all printer. parameter
          {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value)) %}
        {% elif search is defined and name1 is in [search] %} ; print the searched printer. parameter
          {% set _dummy = out.append("printer['%s'].%s = %s" % (name1, name2, value)) %}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}
  {% if out|length > 0 %}
    {action_respond_info(out|join("\n"))}
  {% else %}
    {action_respond_info("Nothing found for \"DUMP_PARAMETER %s\"" % rawparams)}
  {% endif %}

[gcode_macro DUMP_PRINT_AREA_LIMITS]
description: Debug: Print information about print volume and probeable area
gcode:
  {% set min = printer.toolhead.axis_minimum %}
  {% set max = printer.toolhead.axis_maximum %}
  {% set probe_offset = {'x' : printer.configfile.settings.probe.x_offset,
                         'y' : printer.configfile.settings.probe.y_offset} %}
  {% set probe_area = {'min' : {'x' : [min.x,(min.x-probe_offset.x)]|max,
                                'y' : [min.y,(min.y-probe_offset.y)]|max},
                       'max' : {'x' : [max.x,(max.x-probe_offset.x)]|min,
                                'y' : [max.y,(max.y-probe_offset.y)]|min}} %}
  {action_respond_info("Print Volume Limits:
                        Min X:%7.1f, Y:%7.1f, Z:%7.1f
                        Max X:%7.1f, Y:%7.1f, Z:%7.1f
                        Probe Area Limits:
                        Min X:%7.1f, Y:%7.1f
                        Max X:%7.1f, Y:%7.1f" % 
    (min.x,min.y,min.z,max.x,max.y,max.z,probe_area.min.x,probe_area.min.y, probe_area.max.x,probe_area.max.y))}