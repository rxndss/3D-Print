# This file has been created by Trails, of Annex Engineering, for the K3 3D Printer.
# Please change settings for your specific build or ensure you place your items in the same spots on the same MCU as I have.
# I've added as many options as I can think of for different displays as well as listed the available commands you can use via the terminal at the bottom of this configuration file.

#THIS CONFIG IS FOR A 180mm x 180mm x 300mm K3 PRINTER ONLY FOR THE FYSETC SPIDER CONTROLLER
#PLEASE READ THE WHOLE CONFIG BEFORE ATTEMPTING TO DO ANYTHING
#CONNECTORS/PORTS ON THE CONTROLLERS ARE NOTED WITH COMMENTS FOR EACH LOCATION/INPUT/OUTPUT

# use the following modifiers before the pin definition (ex: ^!ar99)
# ! 			invert the logic
# ^ 			activate 5v pullup (does not apply to all pins)
# mcu_name: 	use pins on additional MCU (ex: z:ar10)

# |------------------------|
# |        BACKPACK        |
# |------------------------|
# | Y  |    | Z1 |    | X1 |
# |-----    ------    -----|
# |                        |
# | ------          ------ |
# | | Z  |          | Z2 | |
# | ------          ------ |
# |-----              -----|
# | X  |              | Y1 |
# |------------------------|

[include timelapse.cfg]
#[include scripts/pico.cfg] #enable for input shaping
#[include /home/pi/klipper/klippy/extras/gcode_shell_command.py]

# MCU SPIDER
[mcu] 
	#You will need to set this definition manually following the instructions in the line below
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_180009001950563046363120-if00

restart_method: command

#[mcu host]
#serial: /tmp/klipper_host_mcu

[mcu supernova]
serial: /dev/serial/by-id/usb-Klipper_rp2040_E660C062136E362B-if00

# EXP1 / EXP2 (display) pins
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC9, EXP1_2=PA8,
    EXP1_3=PC11, EXP1_4=PD2,
    EXP1_5=PC10, EXP1_6=PC12,    # Slot in the socket on this side
    EXP1_7=PD0, EXP1_8=PD1,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PC6, EXP2_4=PA4,
    EXP2_5=PC7, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PB10, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>


#virtual sdcard settings
[virtual_sdcard]
path: /home/pi/printer_data/gcodes

#enable display status for moonraker
[display_status]

# Enable Pause/Resume Functionality
[pause_resume]

#Printer Speeds and Accels
[printer]
kinematics: cartesian
max_velocity: 1000
max_accel: 12000 # change this to 7500 after commissioning
max_accel_to_decel: 12000
max_z_velocity: 20   # may be able to increase to 15 after comissioning.
max_z_accel: 1000
square_corner_velocity: 12.0 # start at 8, but then increase once you're sure assembly is sound

#Gcode G2/G3 Arc Support
[gcode_arcs]
resolution: 0.1

#Input Shaper Settings
# you need to tune your printer for this
# [input_shaper]
# shaper_freq_x:
# shaper_freq_y:
# shaper_type: mzv

[input_shaper]
#shaper_type_x = mzv
#shaper_freq_x = 90.8
#shaper_type_y = mzv
#shaper_freq_y = 101.4
shaper_type_x:zv
shaper_freq_x:78.0 #93.2
shaper_type_y:mzv
shaper_freq_y:67.8 #79.0

# These settings are for a cartesianXY machine (K1, K2, K3, etc), it is setup using 4x 5160HV from Waterott and Sensorless Endstops
# Board version = R1

# Steppers Settings
[stepper_x]
# connected to Stepper #1 on Supernova
step_pin: supernova:gpio2
dir_pin: !supernova:gpio1
enable_pin: !supernova:gpio3
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_x:virtual_endstop 
position_min: -8
position_endstop: 180
position_max: 180
homing_speed: 60.0
homing_retract_dist: 0.0
homing_positive_dir: true
 
[stepper_x1]
# connected to Stepper #2 on Supernova
step_pin: supernova:gpio5
dir_pin: supernova:gpio4
enable_pin: !supernova:gpio6
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_x1:virtual_endstop 


[stepper_y]
# connected to Stepper #3 on Supernova
step_pin: supernova:gpio11
dir_pin: supernova:gpio10
enable_pin: !supernova:gpio12
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: -2
position_endstop: -2
position_max: 184
homing_speed: 60.0
homing_retract_dist: 0.0
homing_positive_dir: false 


[stepper_y1]
# connected to Stepper #4 on Supernova
step_pin: supernova:gpio14
dir_pin: !supernova:gpio13
enable_pin: !supernova:gpio15
# 20t Pulley, 2mm Pitch on a 1.8deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
# connected to virtual endstop
endstop_pin: tmc5160_stepper_y1:virtual_endstop 



#TMC Stepper Driver Settings
[tmc5160 stepper_x]
# connected to Stepper #1 on Supernova
cs_pin: supernova:gpio26
spi_bus: spi0c
diag0_pin: ^!supernova:gpio0
interpolate: true
run_current: 1.7
sense_resistor: 0.075
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive

[tmc5160 stepper_x1]
# connected to Stepper #2 on Supernova
cs_pin: supernova:gpio22
spi_bus: spi0c
diag0_pin: ^!supernova:gpio7
stealthchop_threshold: 0
interpolate: true
run_current: 1.7
sense_resistor: 0.075
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive


[tmc5160 stepper_y]
# connected to Stepper #3 on Supernova
cs_pin: supernova:gpio21
spi_bus: spi0c
diag0_pin: ^!supernova:gpio9
stealthchop_threshold: 0
interpolate: true
run_current: 1.7
sense_resistor: 0.075
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive

[tmc5160 stepper_y1]
# connected to Stepper #4 on Supernova
cs_pin: supernova:gpio20
spi_bus: spi0c
diag0_pin: ^!supernova:gpio8
stealthchop_threshold: 0
interpolate: true
run_current: 1.7
sense_resistor: 0.075
driver_SGT: 1 # -64 is most sensitive value, 63 is least sensitive


# Stepper Configs
#[stepper_x]
# connected to X Stepper on SPIDER
#step_pin: PE11
#dir_pin: PE10
#enable_pin: !PE9
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
#rotation_distance: 40
#microsteps: 128 #64
#full_steps_per_rotation: 400
# connected to virtual endstop
#endstop_pin: tmc2209_stepper_x:virtual_endstop 
#position_min: -8
#position_endstop: 180
#position_max: 180
#homing_speed: 50.0
#homing_retract_dist: 0
#homing_positive_dir: true

#[stepper_x1]
# connected to Y Stepper on SPIDER
#step_pin: PD8
#dir_pin: !PB12
#enable_pin: !PD9
## 20t Pulley, 2mm Pitch on a 0.9deg Motor
#rotation_distance: 40#
#microsteps: 128 #64
#full_steps_per_rotation: 400
# connected to virtual endstop
#endstop_pin: tmc2209_stepper_x1:virtual_endstop 



#[stepper_y]
# connected to Z Stepper on SPIDER
#step_pin: PD14
#dir_pin: !PD13
#enable_pin: !PD15
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
#rotation_distance: 40
#microsteps: 128 #64
#full_steps_per_rotation: 400
# connected to virtual endstop
#endstop_pin: tmc2209_stepper_y:virtual_endstop 
#position_min: -2
#position_endstop: -2
#position_max: 184
#homing_speed: 50.0
#homing_retract_dist: 0
#homing_positive_dir: false

#[stepper_y1]
# connected to E0 Stepper on SPIDER
#step_pin: PD5
#dir_pin: PD6
#enable_pin: !PD4
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
#rotation_distance: 40
#microsteps: 128 #64
#full_steps_per_rotation: 400
# connected to virtual endstop
#endstop_pin: tmc2209_stepper_y1:virtual_endstop 



[stepper_z]
# connected to E1 Stepper on SPIDER
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5
# 5:1 Belted Z attached to a 1.8deg Motor
rotation_distance: 40
gear_ratio: 5:1
microsteps: 16
full_steps_per_rotation: 200 #change to 400 for a 0.9deg motor

# TR12x2 Leadscrew attached to a 1.8deg Motor
#rotation_distance: 2
#gear_ratio: 2:1
#microsteps: 4
#full_steps_per_rotation: 200 #change to 400 for a 0.9deg motor

# connected to Z- Endstop on SPIDER
endstop_pin: probe:z_virtual_endstop
position_max: 305 #this is set here on purpose, your actual travel will vary based on spring compression holding the bed, adjust at your own risk
position_min: -5
homing_speed: 15.0
second_homing_speed: 5.0
homing_retract_dist: 10.0
homing_positive_dir: false
 
[stepper_z1]
# connected to E2 Stepper on SPIDER
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3
# 5:1 Belted Z attached to a 1.8deg Motor
rotation_distance: 40
gear_ratio: 5:1
microsteps: 16
full_steps_per_rotation: 200 #change to 400 for a 0.9deg motor

# TR12x2 Leadscrew attached to a 1.8deg Motor
#rotation_distance: 2
#gear_ratio: 2:1
#microsteps: 4
#full_steps_per_rotation: 200 #change to 400 for a 0.9deg motor
 
[stepper_z2]
# connected to E3 Stepper on SPIDER
step_pin: PD12
dir_pin: !PC4
enable_pin: !PE8
# 5:1 Belted Z attached to a 1.8deg Motor
rotation_distance: 40
gear_ratio: 5:1
microsteps: 16
full_steps_per_rotation: 200 #change to 400 for a 0.9deg motor

# TR12x2 Leadscrew attached to a 1.8deg Motor
#rotation_distance: 2
#gear_ratio: 2:1
#microsteps: 4
#full_steps_per_rotation: 200 #change to 400 for a 0.9deg motor



# TMC Stepper Configurations for All Motors
#[tmc2209 stepper_x]
# connected to X Stepper on SPIDER
#art_pin: PE7
#interpolate: false
#run_current: 1.4
#sense_resistor: 0.110
#stealthchop_threshold: 0
#driver_TBL: 1
#driver_TOFF: 5

#driver_HSTRT: 0
#driver_HEND: 15
# Place a jumper on the two pin header near the endstop for sensorless homing
#diag_pin: PB14 #connected to X Endstop (X Jumper Header)
# You may need to tune this value.  See https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing
#driver_SGTHRS: 146

#[tmc2209 stepper_x1]
# connected to Y Stepper on SPIDER
#uart_pin: PE15
#interpolate: false
#run_current: 1.4
#sense_resistor: 0.110
#stealthchop_threshold: 0
#driver_TBL: 1
#driver_TOFF: 5

#driver_HSTRT: 0
#driver_HEND: 15
# Place a jumper on the two pin header near the endstop for sensorless homing
#diag_pin: PB13 #connected to Y Endstop (Y Jumper Header)
# You may need to tune this value.  See https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing
#driver_SGTHRS: 146

#[tmc2209 stepper_y]
# connected to Z Stepper on SPIDER
#uart_pin: PD10
#interpolate: false
#run_current: 1.4
#sense_resistor: 0.110
#stealthchop_threshold: 0
#driver_TBL: 1
#driver_TOFF: 5

#driver_HSTRT: 0
#driver_HEND: 15
# Place a jumper on the two pin header near the endstop for sensorless homing
#diag_pin: PA0 #connected to Z Endstop (Z Jumper Header)
# You may need to tune this value.  See https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing
#driver_SGTHRS: 146

#[tmc2209 stepper_y1]
# connected to E0 Stepper on SPIDER
#uart_pin: PD7
#interpolate: false
#run_current: 1.4
#sense_resistor: 0.110
#stealthchop_threshold: 0
#driver_TBL: 1
#driver_TOFF: 5

#driver_HSTRT: 0
#driver_HEND: 15
# Place a jumper on the two pin header near the endstop for sensorless homing
#diag_pin: PA3 #connected to E0 Endstop (E0 Jumper Header)
# You may need to tune this value.  See https://www.klipper3d.org/TMC_Drivers.html#sensorless-homing
#driver_SGTHRS: 146
 
[tmc2209 stepper_z]
# connected to E1 Stepper on SPIDER
uart_pin: PC14
interpolate: true
run_current: 1.0 
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z1]
# connected to E2 Stepper on SPIDER
uart_pin: PC15
interpolate: true
run_current: 1.0 
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z2]
# connected to E3 Stepper on SPIDER
uart_pin: PA15
interpolate: true
run_current: 1.0 
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 extruder]
# connected to E4 Stepper on SPIDER
uart_pin: PD11
interpolate: true
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0


# Force Move used to force a single stepper to move. Not used once setup complete
[force_move]
enable_force_move: true

# Dockable Probe
[dockable_probe]
# connected to E1 (Y-Max Port) Endstop on SPIDER
pin: ^PA2
x_offset: -25.0 # offset for microswitch x direction off nozzle
y_offset: 18.88 # offset for microswitch y direction off nozzle
#z_offset: 8.5 # offset for microswitch in z height - this is a starting point only
samples: 3
sample_retract_dist: 5
samples_result: median
samples_tolerance: 0.02
samples_tolerance_retries: 3
speed: 15
lift_speed: 50

# annexed probe specific
dock_position:             -8,164,20 #back left corner of gantry
approach_position:         32,164,20
detach_position:           -8,124,20
safe_z_position:           90,90 #center of bed
attach_speed:              20
detach_speed:              100
travel_speed:              300
check_open_attach:         True
dock_fixed_z:              True
dock_retries:			   1

#   Optional custom gcode sections for annexed probe
pre_attach_gcode:
    G1 X40 Y40 F9000    #keep umbilical from catching on stuff
pre_detach_gcode:
    G1 X40 Y40 F9000   #keep umbilical from catching on stuff
	
post_attach_gcode:
    G1 X40 Y164 F9000   # Exit the probe dock before continuing (no more probes in the purge bucket)
post_detach_gcode:
    G1 X40 Y164 F9000   # After detaching, return to reasonable position

[thermistor Dyze500]
temperature1: 25
resistance1: 4500000
temperature2: 260
resistance2: 2240
temperature3: 460
resistance3: 125.4

[thermistor Dyze300]
#based on https://docs.dyzedesign.com/general-support/temperature-sensors.html#_300%C2%B0c-thermistor
temperature1: 20
resistance1: 123800
temperature2: 200
resistance2: 550
temperature3: 300
resistance3: 106


# Extruder0
[extruder]
# connected to E4 Stepper on SPIDER
step_pin: PE1
dir_pin: !PE0
enable_pin: !PC5
rotation_distance: 21.507 #for 5mm Shaft Driven Bondtech gearsets
gear_ratio: 20:1 #Sherpa Mini 10t uses 5:1 or 8t uses 50:8, Folded Ascender Use 40:1 or 20:1
microsteps: 4
full_steps_per_rotation: 200 #1.8 deg motor

#0.4mm Nozzle
nozzle_diameter: 0.500
pressure_advance: 0.01
pressure_advance_smooth_time: 0.020
filament_diameter: 1.750	
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 1500.0
max_extrude_cross_section: 20000.0


# connected to Heater0 on SPIDER
heater_pin: PB15
max_power: 1.0

# connected to Thermistor0 on SPIDER
#sensor_type: Dyze300
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC0

#Hotend PID Settings
#control: pid
#pid_Kp: 32.426 
#pid_Ki: 1.743
#pid_Kd: 150.782

min_extrude_temp: 0
min_temp: 0
max_temp: 450


 
# Heated Bed  
[heater_bed]
# connected to Heater1 on SPIDER
heater_pin: PC8
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
# connected to Thermistor1 on SPIDER
sensor_pin: PC1
smooth_time: 3.0

#Build Plate PID Settings
max_power: 1
#control: pid
#pid_Kp: 42.475 
#pid_Ki: 1.395 
#pid_Kd: 323.339
min_temp: 0
max_temp: 130

#Raspberry Pi Temperature Sensor
[temperature_sensor pi_cpu]
sensor_type: temperature_host
gcode_id: P

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PC2

 
# Fans  
# Hotend Cooling Fan
[heater_fan my_nozzle_fan]
# connected to Fan0 on SPIDER - 12v Fan
pin: PA13
max_power: 1.0
hardware_pwm: false
kick_start_time: 0.500
heater: extruder
heater_temp: 75.0
fan_speed: 1.00

[fan_generic my_bed_fan ]
# connected to HE2 on SPIDER - 12v Fan
pin: PB4
max_power: 1
hardware_pwm: false
kick_start_time: 0.500
#heater: heater_bed
#heater_temp: 81.0
#fan_speed: 1
 
 
# print cooling fan
[fan]
# connected to Fan1 on SPIDER - 12v Fan
pin: !PB2 #pin: PA14
#pin: host:pwmchip0/pwm0
hardware_pwm: true
cycle_time: 0.00004
max_power: 1.0
tachometer_pin: ^PA1 # Made up pin name, look up your boards pinout diagram to get the pin name for the pin you've chosen
tachometer_poll_interval: 0.00004 # will support up to a 30.000 RPM fan with 2 pulses per rotation.
enable_pin: PB5
kick_start_time: 0.5
  
#	thermally and driver_on controlled electronics bay fan (wire fans in parallel into the single connector)
[controller_fan electronics_fan_1]
# connected to Fan2 on SPIDER - 24v Fan
pin: PA14 #pin: PB2
max_power: 1.0
kick_start_time: 0.500
fan_speed: 1.00
idle_timeout: 60
heater: heater_bed

[controller_fan supernova_fan]
pin: PB7
max_power: 1
kick_start_time: 0.5
fan_speed: 0.6
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 120
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_x, stepper_x1, stepper_y, stepper_y1
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.


# Mesh Bed Settings
[bed_mesh]
speed: 200
horizontal_move_z: 10
mesh_min: 20,25 #20,25
mesh_max: 150, 155 #150,155
probe_count: 9,9 #def 5,5
fade_start: 0.6
fade_end: 2
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.1
relative_reference_index: 40  #def 12 ^^^because were measuring the offset from the nozzle switch to the bed using the center of the bed, the equation to find the location = (probe point count)/2-1

# Z Tilt Bed Adjustment settings
[z_tilt]
#3 Z Motors
z_positions: 
    -74.0, -18.0    # Front Left
    76.0,  217.0    # Rear
    226.0, -18.0    # Front Right
points:
    45, 25          # Front Left
    101, 143        # Rear
    175, 8         # Front Right
speed: 200
horizontal_move_z: 20.0
retries: 4
retry_tolerance: 0.01

# Motor and Heater Idle Timeout
[idle_timeout]
timeout: 6000


#	Macros
#	pre-print-prep macro
[gcode_macro pre_print_prep]
gcode:
        chamber_lighting_on ;turn on lighting
        abs_warmup_temp ;tell bed to warm up
		Z_TILT_ADJUST	;adjust bed so its square to gantry
        BED_MESH_CALIBRATE ;Run Bed Mesh

#	macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
		Z_TILT_ADJUST	;adjust bed so its square to gantry
	
#	macro to level bed to the gantry
[gcode_macro square_bed_to_machine]
gcode:
		G32	;adjust bed so its square to gantry

#	mesh bed level the machine
[gcode_macro mesh_bed_level_machine]
gcode:
		BED_MESH_CALIBRATE	;Run Bed Mesh

#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro print_start]
# params:
#   EXTRUDER
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}
    {% set BED = params.BED|default(110) %}

    print_start_1			;print start macro 1
    M140 S{BED}			;set bed temperature and wait
    M109 S{EXTRUDER}		;set hotend temperature and wait
    M190 S{BED}			;set bed temperature and do not wait
    G28
    #BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=prusa3
    print_start_2			;print start macro 2
    prime_line_regular	;draw prime line in corner of bed

[gcode_macro print_start_1]
gcode:
	M104 S0 #cancel set temp
	M107 #turn cooling fans off
	G21  # set units to mm
	G90  # use absolute coordinates
	M83	# use relative extrusion
	G92 E0.0  # reset e count
	M220 S100 # reset speed multiplier
	Go_To_Purge_Location	#move to nozzle scrubber bucket

[gcode_macro print_start_2]
gcode:
	nozzle_clean		#clean nozzle
	
[gcode_macro prime_line_regular]
gcode:
	G1 Z20 F6000
	G1 X10 Y5 F12000
    #G1 X10 Y10 F12000
	G1 Z0.5 F600
    #G1 Z2 E10 F1000
	G1 X105 E10 F1000
	G1 X115 E2.5 F1000
    G1 E-0.8 F1000
	G92 E0.0             ;set extruder to Zero
    G92 Z0.5               ;let printer know its at 0.5
    G90                  ;set to absolute

#    Use print_end for you slicer ending script    
[gcode_macro print_end]
gcode:
	G91  							#relative positioning
	G0 E-0.3 F4800  				#retract 0.3mm of filament
	G0 Z+1.00 X-2 Y-2 F6000  		#short quick move to disengage from print
	G0 Z+5.00  F6000  				#move Z-Axis 1mm away from part
    BED_MESH_CLEAR                  #asda
	G90  					#absolute positioning
	Go_To_Purge_Location 	#move gantry close to xy min, by nozzle switch in front
	G91  					#relative positioning
	G0 E10 F400			#extrude filament to get better blob on end
	G0 E-0.3 F1800  		#retract additional filament to move out of melt zone
	G90 					#absolute positioning
    SET_FAN_SPEED FAN=my_bed_fan SPEED=0

	M104 S0  				#turn off hotendBED_MESH_CLEAR
    
	#M140 S0  				#turn off heatbed

	#z bed placement control for end of print
    SAVE_GCODE_STATE NAME=END_state
    {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
        # do nothing
    {% elif printer.toolhead.position.z|float >= 130|float %}    #if z position >= 130mnm do the following
        G91              #relative positioning
        G1 Z+10 F600     #move z down 10mm
        G90              #absolute positioning
    {% else %}  		 #if you dont meet any of the criteria
        G90              #absolute positioning
        G1 Z130 F600     #move z to 130mm
    {% endif %}
    RESTORE_GCODE_STATE NAME=END_state

	M106 S0  				#shut off part cooling fans
	#M84					#turn off motors
	clear_pause				#clear pause state encase it was enabled

#	Macro to execute when pausing printer
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000

#	Macro to execute when resuming printer
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

#	Macro to execute when canceling a print
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    print_end #execute the print end macro
	CLEAR_PAUSE
  	SDCARD_RESET_FILE
  	BASE_CANCEL_PRINT

#	Notify when ABS Timer is complete
[delayed_gcode notify_chamber]
initial_duration: 0
gcode:
    {gcode.action_respond_info("action:prompt_begin Chamber Preheated")}
    {action_respond_info("action:prompt_choice OK")}
    {action_respond_info("action:prompt_show")}

#	Set Temps for chamber warmup when printing with abs 
[gcode_macro abs_warmup_temp]
# params:
    # TEMP
gcode:
    {% set TEMP = params.TEMP|default(110) %}

	M106 S255					#turn part cooling fan on to blow heat around chamber
    SET_FAN_SPEED FAN=my_bed_fan SPEED=100
	M190 S{TEMP}				#set bed temperature and wait
	G28							#home machine
	G0 X90 Y90 Z20 F3000		#move to center of bed
	UPDATE_DELAYED_GCODE ID=notify_chamber DURATION=1200

#	Notify when filament is unloaded and ready to reload
[delayed_gcode notify_extruder_reload]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin Ready to Load Filament")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Load Filament
[gcode_macro load_filament]
# params:
#   EXTRUDER
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}

    turn_fans_off			#turn part cooling fans off
    G0 X10 Y40 F18000		#move to area where can easily load filament
    {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
        # do nothing
    {% elif printer.toolhead.position.z|float >= 50|float %}    #if z position >= 50mnm do the following
        #do nothing
    {% else %}  		 #if you dont meet any of the criteria
        G90              #absolute positioning
        G1 Z50 F600     #move z to 50mm
    {% endif %}
    M109 S{EXTRUDER}		#set hotend temperature and wait
    M83						#relative positioning on extruder	
    G0 E120 F400  			#prime extruder
    M109 S0					#turn off extruder
    UPDATE_DELAYED_GCODE ID=notify_extruder_load DURATION=10

#	Notify when filament is loaded
[delayed_gcode notify_extruder_load]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin FIlament is Loaded")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Unload Filament
[gcode_macro unload_filament]
# params:
#   EXTRUDER
gcode:
    {% set EXTRUDER = params.EXTRUDER|default(260) %}

    turn_fans_off			#turn part cooling fans off
    G0 X10 Y40 F18000		#move to area where can easily load filament
    {% if printer.toolhead.position.z|float == printer.configfile.config["stepper_z"]["position_max"]|float %} #if z position = z max do the following
        # do nothing
    {% elif printer.toolhead.position.z|float >= 50|float %}    #if z position >= 50mnm do the following
        #do nothing
    {% else %}  		 #if you dont meet any of the criteria
        G90              #absolute positioning
        G1 Z50 F600     #move z to 50mm
    {% endif %}
    M109 S{EXTRUDER}		#set hotend temperature and wait	
    M83						#relative positioning on extruder
    G0 E5 F400			#extrude filament to get better blob on end
    G0 E-600 F1800  		#retract additional filament to move out of melt zone
    UPDATE_DELAYED_GCODE ID=notify_extruder_reload DURATION=10

#	Scrubs the nozzle on the brass brush or silicone wiper located in the build chamber
[gcode_macro nozzle_clean]
gcode:
	SAVE_GCODE_STATE NAME=clean_nozzle_state	#store current nozzle location
	Wipe_Nozzle
	RESTORE_GCODE_STATE NAME=clean_nozzle_state MOVE=1 #restore current nozzle location

#   Settings for the nozzle wiper
[gcode_macro Nozzle_Wiper_Variables]
# the values below are for a wiper located at (-8, 125)
variable_purge_x:       -8  # x purge location
variable_purge_y:       110 # y purge location
variable_purge_x_entry: 0   # x entry location before going to the purge location
variable_purge_y_entry: 110 # y entry location before going to the purge location
variable_wipe_dx:       0   # distance to move in x from the purge position in order to wipe
variable_wipe_dy:       25  # distance to move in y from the purge position in order to wipe
variable_wipe_count:    3   # number of wipe cycles
variable_travel_speed:  300 # how fast travel speeds will be performed
variable_entry_speed:   100 # how fast to move from the entry location to the purge location
variable_wipe_speed:    50  # how fast to move when wiping
variable_purge_speed:   7   # how fast to extrude in mm/s when purging
variable_purge_fan:     255  # default fan speed out of 255 when purging
variable_wipe_fan:      255 # default fan speed out of 255 when wiping
gcode:

#   Move above the purge bucket
[gcode_macro Go_To_Purge_Location]
gcode:
    {% set Px = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x|float %}
    {% set Py = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y|float %}
    {% set Pxe = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x_entry|float %}
    {% set Pye = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y_entry|float %}
    {% set St = printer["gcode_macro Nozzle_Wiper_Variables"].travel_speed * 60 %}
    {% set Se = printer["gcode_macro Nozzle_Wiper_Variables"].entry_speed * 60 %}

    SAVE_GCODE_STATE NAME=Go_To_Purge_Location_state
    G90

    {% if not (printer.toolhead.position.x == Px and printer.toolhead.position.y == Py) %}
        G1 X{Pxe} Y{Pye} F{St}
        G1 X{Px} Y{Py} F{Se}
    {% endif %}

    RESTORE_GCODE_STATE NAME=Go_To_Purge_Location_state

#   Wipe the nozzle on the brass brush or silicone wiper
[gcode_macro Wipe_Nozzle]
# params:
#   OLD_FAN_SPEED
gcode:
    {% set OLD_FAN_SPEED = params.OLD_FAN_SPEED|default(-1)|int %}
    {% set Px = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x|float %}
    {% set Py = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y|float %}
    {% set Pxe = printer["gcode_macro Nozzle_Wiper_Variables"].purge_x_entry|float %}
    {% set Pye = printer["gcode_macro Nozzle_Wiper_Variables"].purge_y_entry|float %}
    {% set Wdx = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_dx|float %}
    {% set Wdy = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_dy|float %}
    {% set Wc = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_count|int %}
    {% set Se = printer["gcode_macro Nozzle_Wiper_Variables"].entry_speed * 60 %}
    {% set Sw = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_speed * 60 %}
    {% set Sf = printer["gcode_macro Nozzle_Wiper_Variables"].wipe_fan %}
    
    {% if OLD_FAN_SPEED == -1 %}
        {% set old_Sf = printer.fan.speed %}
    {% else %}
        {% set old_Sf = OLD_FAN_SPEED %}
    {% endif %}
    
    {% if printer.fan.speed < Sf %}
        {% set wait_for_fan = True %}
    {% else %}
        {% set wait_for_fan = False %}
    {% endif %}

    SAVE_GCODE_STATE NAME=Wipe_Nozzle_state
    G90

    # go to purge location
    Go_To_Purge_Location

    # set fan speed for wiping
    M106 S{Sf}
    
    # wait for fan to cool filament if needed
    {% if wait_for_fan %}
        G4 P800
    {% endif %}

    # wipe nozzle
    G1 X{Px + Wdx} Y{Py + Wdy} F12000
    {% for i in range(Wc) %}
        G1 X{Px} Y{Py} F{Sw}
        G1 X{Px + Wdx} Y{Py + Wdy} F{Sw}
    {% endfor %}

    # move away from wiper
    G1 X{Pxe + Wdx} Y{Pye + Wdy} F{Se}

    # restore fan speed
    M106 S{old_Sf}

    RESTORE_GCODE_STATE NAME=Wipe_Nozzle_state

#   Purge material into the bucket
[gcode_macro Purge]
description: Extrude into the purge bucket and wipe the nozzle
# params:
#   EXACT_TEMP:     whether to cool to specified temperature if already above it
#   TEMPERATURE:    minimum extruder temperature before purging
#   FEED_AMOUNT:    length of material in mm to purge
#   MAX_FEED:       max extrude length for a single purge strip. Set to -1 to disable length limit.
gcode:
    {% set EXACT_TEMP = params.EXACT_TEMP|default(False) %}
    {% set TEMPERATURE = params.TEMPERATURE|default(230.0)|float %}
    {% set FEED_AMOUNT = params.FEED_AMOUNT|default(15.0)|float %}
    {% set MAX_FEED = params.MAX_FEED|default(8.0)|float %}

    {% set Sp = printer["gcode_macro Nozzle_Wiper_Variables"].purge_speed * 60 %}
    {% set Sf = printer["gcode_macro Nozzle_Wiper_Variables"].purge_fan %}
    {% set old_Sf = printer.fan.speed %}

    SAVE_GCODE_STATE NAME=Purge_state

    # make sure FEED_AMOUNT is at least 3 to avoid negative E movements
    {% if FEED_AMOUNT < 3 %}
        {% set FEED_AMOUNT = 3 %}
    {% endif %}
    
    # go to purge location
    Go_To_Purge_Location

    # wait for hotend
    {% if EXACT_TEMP|lower == 'true' or printer.extruder.temperature < TEMPERATURE %}
        M109 S{TEMPERATURE}
    {% endif %}

    # set fan speed for purging
    M106 S{Sf}

    # relative extrusion
    M83

    # if extrude length is unlimited, purge a single strip
    {% if MAX_FEED == -1 %}
        # extrude
        G1 E{FEED_AMOUNT - 3} F{Sp}
        G1 E3 F100

    # else purge multiple smaller strips
    {% else %}
        {% for i in range(((FEED_AMOUNT - 3) / MAX_FEED)|int) %}
            # go to purge location
            Go_To_Purge_Location
            
            # extrude
            G1 E{MAX_FEED - 3} F{Sp}
            G1 E3 F100

            # wait
            G4 P800

            # wipe the nozzle
            Wipe_Nozzle OLD_FAN_SPEED={Sf}
        {% endfor %}

        # purge remainder
        {% set remainder = (FEED_AMOUNT - 3)|int % MAX_FEED|int %}
        Go_To_Purge_Location
        G1 E{remainder} F{Sp}
        G1 E3 F100
    {% endif %}

    # reset E position
    G92 E0.0
    G1 E-3

    # wait
    G4 P800

    # wipe the nozzle
    Wipe_Nozzle OLD_FAN_SPEED={old_Sf}

    RESTORE_GCODE_STATE NAME=Purge_state

#	Macro for M600 - filament out pause resume 
[gcode_macro M600]
# params:
#   X
#   Y
#   Z
gcode:
    {% set X = params.X|default(40) %}
    {% set Y = params.Y|default(40) %}
    {% set Z = params.Z|default(10) %}

	{% if printer.toolhead.status == "Ready" %}
		# do nothing
	{% else %}
    	M117 Filament Change
		SAVE_GCODE_STATE NAME=M600_state
    	PAUSE
		G91
		G1 E-5 F4000
		G1 Z{Z}
		G90
		G1 X{X} Y{Y} F3000
		G0 E15 F1800			#extrude filament to get better blob on end
		G0 E-500 F4800  		#retract additional filament to move out of melt zone
		RESTORE_GCODE_STATE NAME=M600_state
	{% endif %}

#	Use this command to load filament during a mid print filament swap	
[gcode_macro SWAP_RESUME] 
gcode:
 	M117 Printing...
	LOAD_FILAMENT
	RESUME

#	Macro to Turn Fans Off
[gcode_macro turn_fans_off]
gcode:
	M107

#	Redefine M204 gcode to properly accel_to_decel when called instead of keeping default through the print
[gcode_macro M204]
rename_existing: M204.1
gcode:

   {% if 'P' in params %}{% set accel = params.P %}{% endif %}
   {% if 'S' in params %}{% set accel = params.S %}{% endif %}
   {% if 'T' in params %}{% set accel = params.T %}{% endif %}

    SET_VELOCITY_LIMIT ACCEL={ accel } ACCEL_TO_DECEL={ accel|float / 1.0}

#	Macro to Attach the Magnetic Probe
[gcode_macro attach_probe_to_toolhead]
gcode:
	ATTACH_PROBE
	
#	Macro to Detach the Magnetic Probe
[gcode_macro detach_probe_from_toolhead]
gcode:
	DETACH_PROBE

# Chamber Lighting
[output_pin caselight]
pin: PB3
#max_power: 0.80
#kick_start_time: 0.5
pwm: true
shutdown_value: 0
value: 100
cycle_time: 1
scale: 100
 
# Lighting Control
[gcode_macro lights_off]
gcode:
    SET_PIN PIN=caselight VALUE=0
 
[gcode_macro lights_on]
gcode:
    SET_PIN PIN=caselight VALUE=100
 
[gcode_macro lights_toggle]
gcode:
    {% if printer["output_pin caselight"].value > 0 %}
        SET_PIN PIN=caselight VALUE=0
    {% else %}
        SET_PIN PIN=caselight VALUE=100
    {% endif %}

##########
# Shell Scripts
##########

[gcode_shell_command clear_input_shaper]
command: sh /home/pi/printer_data/config/scripts/clear_input_shaper.sh
timeout: 30.
verbose: true

[gcode_shell_command calculate_input_shaper]
command: sh /home/pi/printer_data/config/scripts/calculate_input_shaper.sh
timeout: 60.
verbose: true

[gcode_macro RUN_INPUT_SHAPER]
gcode:
  RUN_SHELL_COMMAND CMD=clear_input_shaper
  TEST_RESONANCES AXIS=X
  TEST_RESONANCES AXIS=Y
  RUN_SHELL_COMMAND CMD=calculate_input_shaper

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [dockable_probe]
#*# z_offset = 8.430
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.484
#*# pid_ki = 1.638
#*# pid_kd = 132.677
#*#
#*# [bed_mesh main_bed]
#*# version = 1
#*# points =
#*# 	0.240000, 0.265000, 0.260000, 0.225500, 0.185000
#*# 	0.055000, 0.075000, 0.085000, 0.100000, 0.050000
#*# 	-0.035000, -0.042500, 0.000000, 0.03000, -0.052500
#*# 	0.046500, 0.030000, 0.043000, 0.057500, 0.060500
#*# 	0.172500, 0.185000, 0.192500, 0.220000, 0.250000
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 175.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.053
#*# pid_ki = 2.016
#*# pid_kd = 251.733
#*#
#*# [bed_mesh oseq_bed]
#*# version = 1
#*# points =
#*# 	0.055500, 0.337500, 0.347500, 0.345000, 0.232500
#*# 	-0.042500, -0.065000, 0.075000, 0.090000, 0.065000
#*# 	-0.217500, -0.115000, 0.000000, 0.027500, 0.017500
#*# 	-0.170000, -0.165000, -0.057500, 0.002500, 0.105000
#*# 	0.110000, 0.142500, 0.180000, 0.202500, 0.187500
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 175.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [bed_mesh second_bed]
#*# version = 1
#*# points =
#*# 	0.220000, 0.225000, 0.232500, 0.242500, 0.250000, 0.247500, 0.247500, 0.247500, 0.237500, 0.225000, 0.217500
#*# 	0.140000, 0.140000, 0.157500, 0.165000, 0.172500, 0.177500, 0.175000, 0.177500, 0.177500, 0.157500, 0.142500
#*# 	0.075000, 0.077500, 0.085000, 0.087500, 0.097500, 0.102500, 0.107500, 0.117500, 0.117500, 0.107500, 0.097500
#*# 	0.012500, 0.010000, 0.017500, 0.025000, 0.035000, 0.045000, 0.050000, 0.057500, 0.062500, 0.057500, 0.052500
#*# 	-0.020000, -0.017500, -0.012500, -0.000000, 0.005000, 0.010000, 0.022500, 0.035000, 0.042500, 0.035000, 0.030000
#*# 	-0.037500, -0.035000, -0.025000, -0.017500, -0.010000, 0.000000, 0.010000, 0.025000, 0.032500, 0.025000, 0.020000
#*# 	-0.010000, -0.012500, 0.000000, 0.005000, 0.015000, 0.017500, 0.025000, 0.042500, 0.052500, 0.050000, 0.045000
#*# 	0.030000, 0.025000, 0.040000, 0.045000, 0.052500, 0.057500, 0.065000, 0.080000, 0.087500, 0.085000, 0.087500
#*# 	0.080000, 0.080000, 0.087500, 0.090000, 0.097500, 0.105000, 0.115000, 0.127500, 0.135000, 0.137500, 0.147500
#*# 	0.145000, 0.140000, 0.147500, 0.152500, 0.162500, 0.165000, 0.175000, 0.187500, 0.200000, 0.207500, 0.215000
#*# 	0.212500, 0.210000, 0.212500, 0.212500, 0.217500, 0.225000, 0.237500, 0.252500, 0.265000, 0.272500, 0.282500
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 11
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 11
#*# max_y = 175.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [bed_mesh prusa]
#*# version = 1
#*# points =
#*# 	0.235000, 0.236250, 0.248750, 0.260000, 0.267500, 0.267500, 0.266250, 0.268750, 0.258750, 0.246250, 0.225000
#*# 	0.160000, 0.162500, 0.173750, 0.178750, 0.185000, 0.190000, 0.200000, 0.202500, 0.192500, 0.180000, 0.165000
#*# 	0.082500, 0.080000, 0.090000, 0.096250, 0.106250, 0.110000, 0.118750, 0.120000, 0.125000, 0.111250, 0.097500
#*# 	0.022500, 0.022500, 0.030000, 0.038750, 0.042500, 0.047500, 0.061250, 0.071250, 0.073750, 0.068750, 0.055000
#*# 	-0.015000, -0.022500, -0.010000, -0.007500, 0.007500, 0.010000, 0.023750, 0.036250, 0.042500, 0.028750, 0.021250
#*# 	-0.027500, -0.032500, -0.018750, -0.010000, -0.005000, 0.000000, 0.012500, 0.028750, 0.026250, 0.023750, 0.013750
#*# 	-0.005000, -0.010000, -0.003750, 0.006250, 0.015000, 0.020000, 0.026250, 0.038750, 0.048750, 0.040000, 0.032500
#*# 	0.025000, 0.020000, 0.035000, 0.037500, 0.048750, 0.045000, 0.055000, 0.068750, 0.075000, 0.075000, 0.076250
#*# 	0.067500, 0.063750, 0.078750, 0.083750, 0.086250, 0.086250, 0.096250, 0.110000, 0.115000, 0.118750, 0.118750
#*# 	0.133750, 0.135000, 0.136250, 0.140000, 0.147500, 0.150000, 0.157500, 0.170000, 0.177500, 0.183750, 0.192500
#*# 	0.197500, 0.198750, 0.207500, 0.212500, 0.220000, 0.220000, 0.223750, 0.258750, 0.257500, 0.260000, 0.262500
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 11
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 11
#*# max_y = 175.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [bed_mesh prusa2]
#*# version = 1
#*# points =
#*# 	0.242500, 0.260000, 0.266250, 0.260000, 0.218750
#*# 	0.068750, 0.077500, 0.092500, 0.107500, 0.073750
#*# 	-0.012500, -0.012500, 0.000000, 0.027500, 0.011250
#*# 	0.017500, 0.023750, 0.026250, 0.048750, 0.040000
#*# 	0.142500, 0.145000, 0.145000, 0.168750, 0.180000
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 5
#*# max_y = 155.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [bed_mesh steel_bed]
#*# version = 1
#*# points =
#*# 	-0.090000, -0.090000, -0.087500, -0.087500, -0.082500, -0.080000, -0.077500, -0.077500, -0.080000
#*# 	-0.055000, -0.055000, -0.056250, -0.053750, -0.050000, -0.048750, -0.047500, -0.050000, -0.056250
#*# 	-0.035000, -0.036250, -0.036250, -0.032500, -0.026250, -0.023750, -0.023750, -0.028750, -0.038750
#*# 	-0.023750, -0.022500, -0.020000, -0.016250, -0.010000, -0.008750, -0.006250, -0.007500, -0.026250
#*# 	-0.020000, -0.018750, -0.013750, -0.011250, 0.000000, 0.001250, 0.003750, -0.001250, -0.012500
#*# 	-0.017500, -0.013750, -0.010000, -0.003750, 0.006250, 0.011250, 0.013750, 0.007500, 0.000000
#*# 	-0.025000, -0.021250, -0.016250, -0.010000, 0.001250, 0.008750, 0.012500, 0.008750, 0.003750
#*# 	-0.041250, -0.033750, -0.030000, -0.022500, -0.010000, -0.001250, 0.006250, 0.003750, -0.003750
#*# 	-0.071250, -0.058750, -0.061250, -0.051250, -0.035000, -0.028750, -0.022500, -0.020000, -0.022500
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 9
#*# max_y = 155.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [bed_mesh prusa_alu]
#*# version = 1
#*# points =
#*# 	0.208750, 0.212500, 0.226250, 0.236250, 0.233750, 0.231250, 0.227500, 0.210000, 0.190000
#*# 	0.131250, 0.133750, 0.146250, 0.153750, 0.158750, 0.167500, 0.163750, 0.152500, 0.131250
#*# 	0.050000, 0.043750, 0.060000, 0.068750, 0.076250, 0.081250, 0.087500, 0.077500, 0.068750
#*# 	0.003750, 0.002500, 0.011250, 0.017500, 0.023750, 0.042500, 0.050000, 0.048750, 0.031250
#*# 	-0.032500, -0.020000, -0.015000, -0.010000, 0.000000, 0.020000, 0.025000, 0.028750, 0.025000
#*# 	-0.030000, -0.022500, -0.008750, 0.000000, 0.016250, 0.025000, 0.040000, 0.035000, 0.038750
#*# 	0.003750, 0.008750, 0.016250, 0.023750, 0.028750, 0.040000, 0.058750, 0.065000, 0.063750
#*# 	0.046250, 0.050000, 0.067500, 0.072500, 0.088750, 0.102500, 0.118750, 0.125000, 0.141250
#*# 	0.100000, 0.107500, 0.122500, 0.133750, 0.142500, 0.157500, 0.180000, 0.195000, 0.215000
#*# tension = 0.1
#*# min_x = 20.0
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 2
#*# min_y = 5.0
#*# x_count = 9
#*# max_y = 155.0
#*# mesh_x_pps = 2
#*# max_x = 150.0
#*#
#*# [bed_mesh prusa3]
#*# version = 1
#*# points =
#*# 	0.205000, 0.202500, 0.210000, 0.212500, 0.212500, 0.202500, 0.192500, 0.162500, 0.115000
#*# 	0.125000, 0.122500, 0.137500, 0.135000, 0.132500, 0.130000, 0.120000, 0.092500, 0.055000
#*# 	0.062500, 0.050000, 0.062500, 0.065000, 0.062500, 0.072500, 0.060000, 0.040000, -0.000000
#*# 	0.022500, 0.012500, 0.017500, 0.020000, 0.020000, 0.030000, 0.025000, 0.005000, -0.032500
#*# 	-0.000000, -0.000000, -0.000000, -0.005000, 0.000000, 0.005000, 0.002500, -0.017500, -0.052500
#*# 	-0.010000, -0.012500, 0.000000, -0.005000, -0.005000, -0.005000, -0.002500, -0.027500, -0.062500
#*# 	0.017500, 0.015000, 0.022500, 0.020000, 0.015000, 0.012500, 0.015000, -0.007500, -0.032500
#*# 	0.060000, 0.047500, 0.052500, 0.050000, 0.052500, 0.052500, 0.055000, 0.032500, 0.005000
#*# 	0.112500, 0.107500, 0.105000, 0.105000, 0.105000, 0.102500, 0.105000, 0.090000, 0.065000
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.1
#*# min_x = 20.0
#*# max_x = 150.0
#*# min_y = 25.0
#*# max_y = 155.0
