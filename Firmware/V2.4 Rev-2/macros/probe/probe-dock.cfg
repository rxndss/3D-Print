##===========================================================================
##================================ Probe Dock ===============================
##===========================================================================
##=============================== Dock Offset ===============================
[gcode_macro _DOCK_OFFSET]
gcode:
    {% set dock_location_x = printer["gcode_macro _USER_VARIABLES"].dock_location_x|float %}
    {% set dock_location_y = printer["gcode_macro _USER_VARIABLES"].dock_location_y|float %}
    {% set exit_move_x = printer["gcode_macro _USER_VARIABLES"].exit_move_x|float %}
    {% set travel_speed = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}

    _ENTRY_POINT function=dock_offset

    G0 X{dock_location_x + exit_move_x} F{travel_speed}
    G0 Y{dock_location_y - exit_move_y} F{travel_speed}

    _EXIT_POINT function=dock_offset

##================================ Dock Probe ===============================
[gcode_macro DOCK_PROBE]
gcode:
    {% set probe_attached = printer["gcode_macro _PROBE_VARIABLES"].probe_attached %}

    {% set dock_location_x = printer["gcode_macro _USER_VARIABLES"].dock_location_x|float %}
    {% set dock_location_y = printer["gcode_macro _USER_VARIABLES"].dock_location_y|float %}
    {% set exit_move_y = printer["gcode_macro _USER_VARIABLES"].exit_move_y|float %}
    {% set safe_z = printer["gcode_macro _USER_VARIABLES"].safe_z|float %}
    {% set travel_speed = printer["gcode_macro _USER_VARIABLES"].travel_speed * 60 %}
    {% set z_speed = printer["gcode_macro _USER_VARIABLES"].z_speed * 60 %}

    _ENTRY_POINT function=dock_probe

    G90

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must home all axes") }

    {% elif probe_attached %}
        { action_respond_info("Docking probe") }

        {% if printer.toolhead.position.z < safe_z %}
            G0 Z{safe_z} F{z_speed}
        {% endif %}

        {% if printer.toolhead.position.y > (dock_location_y - exit_move_y) %}
            G0 Y{dock_location_y - exit_move_y} F{travel_speed}
            G0 X{dock_location_x} F{travel_speed}

        {% else %}
            G0 X{dock_location_x} Y{dock_location_y - exit_move_y} F{travel_speed}
        {% endif %}

        G0 X{dock_location_x} Y{dock_location_y} F{travel_speed}
        _DOCK_OFFSET

#        G4 P100
        _CHECKPROBE action=dock

    {% else %}
        { action_respond_info("Probe already docked") }
        _CHECKPROBE action=query
    {% endif %}

    _EXIT_POINT function=dock_probe
##=================================== End ===================================