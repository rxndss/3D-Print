# VORON2 350mm config

# This is a base printer.cfg file for the VORON2 printer and matches the manual/build guide exactly
# for controllers used (dual RAMPS) and pin layout for all connected components.
# Created by "Boff" with help from the VORON community.
# Revised 6/26/2019 by "wile.e.coyote" to include updates and additions to Klipper component configurations
# as well as to harmonize "stock" configurations for 250/300/350 builds.

# For other build sizes, controllers, or non-standard pin connections, please see
# https://github.com/mzbotreprap/VORON/tree/master/Firmware/Klipper/Voron_2.1/Klipper/Configurations
# for other example Klipper configs created by the VORON community.

# This file is only an example - be sure to review and update it
# according to the specifics of your printer. See the example.cfg and
# example-extras.cfg files for a description of available Klipper parameters.

# AND PLEASE READ THROUGH THE KLIPPER DOCUMENTATION FIRST!
# https://github.com/KevinOConnor/klipper/tree/master/docs

# *** THINGS TO CHANGE/CHECK: ***
# Arduino paths                         [mcu] section
# Thermistor types                      [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
# FSR switch (z endstop) location       [homing_override] section
# FSR switch (z endstop) offset for Z0  [stepper_z] section
# Probe points                          [quad_gantry_level] section
# Min & Max gantry corner positions     [quad_gantry_level] section
# PID tune                              [extruder] and [heater_bed] sections
# Fine tune E steps                     [extruder] section

# Include menu.cfg from the home directory
[include /home/pi/menu.cfg]

[mcu]
# Mcu for X/Y/E steppers
serial: /dev/serial/by-id/usb-Klipper_lpc1768_2180000E011C3DAF27C6875CC62000F5-if00
# Obtain definition by "ls -l /dev/serial/by-id/"
# Some Arduinos clones (CH340) may require using "ls -l /dev/serial/by-path/"

[mcu z]
# Mcu for Z steppers
serial: /dev/serial/by-id/usb-Klipper_lpc1768_2260000E011C3DAF20C6875CC02000F5-if00 
# Obtain definition by "ls -l /dev/serial/by-id/"
# Some Arduinos clones (CH340) may require using "ls -l /dev/serial/by-path/"

[printer]
kinematics: corexy
# Velocities and accels may be increased for better performance
# but should be tested and increased incrementally
max_velocity: 300
max_accel: 3500
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 3
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. The default is 5mm/s.
#   For more information, refer to Klipper docs.

[force_move]
enable_force_move: True

[virtual_sdcard]
path: ~/.octoprint/uploads/

[idle_timeout]
gcode:
   TURN_OFF_HEATERS
   M84                   ; disable steppers
# 12 hrs
timeout: 43200

[stepper_x]
#connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
step_distance: 0.0125
endstop_pin: P1.28
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: P1.17
microsteps: 16
interpolate: True
run_current: 1.1
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 180

[stepper_y]
#connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
step_distance: 0.0125
endstop_pin: P1.26
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 100
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: P1.15
microsteps: 16
interpolate: True
run_current: 1.1
#hold_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 180

# Z0 Stepper - Front Left
[stepper_z]
# Z0 Stepper - Front Left
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
step_distance: 0.00250
endstop_pin: z:P1.25
#   Z_MIN on mcu_z
#position_endstop = -0.4
#   Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
#   (+) value = endstop above Z0, (-) value = endstop below
position_max: 320
position_min: -5
#   Set to -5 to allow room for squaring gantry with quad_gantry_level
homing_speed: 15
second_homing_speed: 3.0
homing_retract_dist: 3.0
homing_positive_dir: false

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.17
microsteps: 16
interpolate: False
run_current: 1.1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#Z MCU - In Y Position
# Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
step_distance: 0.00250

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.15
microsteps: 16
interpolate: False
run_current: 1.1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#Z MCU - In Z Position
# Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
step_distance: 0.00250

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.10
microsteps: 16
interpolate: False
run_current: 1.1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#Z MCU - In E0 Position
# Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
step_distance: 0.00250

#Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.8
microsteps: 16
interpolate: False
run_current: 1.1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

# Custom thermistors (one may define any number of sections with a
# "thermistor" prefix). A custom thermistor may be used in the
# sensor_type field of a heater config section. (For example, if one
# defines a "[thermistor my_thermistor]" section then one may use a
# "sensor_type: my_thermistor" when defining a heater.) Be sure to
# place the thermistor section in the config file above its first use
# in a heater section.

[thermistor gigabyte_thermistor]
temperature1:100
resistance1:1100
temperature2:22.78
resistance2:11300
temperature3:36.67
resistance3:6530
#   Three resistance measurements (in Ohms) at the given temperatures
#   (in Celsius). The three measurements will be used to calculate the
#   Steinhart-Hart coefficients for the thermistor. These parameters
#   must be provided when using Steinhart-Hart to define the
#   thermistor.
#beta:
#   Alternatively, one may define temperature1, resistance1, and beta
#   to define the thermistor parameters. This parameter must be
#   provided when using "beta" to define the thermistor.

[extruder]
step_pin: P2.13
#JP
dir_pin: P0.11
#Mobius
#dir_pin: !P0.11
enable_pin: !P2.12
#   E0 on mcu_xye
#Afterburner
step_distance: 0.00249418514839698
#JP
#step_distance: 0.0017674227614962
#Mobius
#step_distance: 0.0017847349769602
#   555 steps per mm - 1.8 deg - 1/16 microstepping (Mobius3)
#   This must be calibrated to your specific machine for best results
nozzle_diameter: 0.4
filament_diameter: 1.750
max_extrude_only_distance: 1000
#   This is set high to allow the load/unload filament macros to run
#   Adjust to match your approximate filament path length
#max_extrude_cross_section:
#   Maximum area (in mm^2) of an extrusion cross section (eg.
#   extrusion width multiplied by layer height). This setting prevents
#   excessive amounts of extrusion during relatively small XY moves.
#   If a move requests an extrusion rate that would exceed this value
#   it will cause an error to be returned. The default is: 4.0 *
#   nozzle_diameter^2
#max_extrude_only_velocity:
#max_extrude_only_accel:
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not place any limit on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
heater_pin: P2.7
#   D10 on mcu_xye
max_power: 1.0
#Maxiwatt
#sensor_type: NTC 100K beta 3950
#Trianglelab v6/Dragon
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
#   T0 on mcu_xye
#smooth_time: 2.0
#control: pid
#pid_Kp: 16.430
#pid_Ki: 0.755
#pid_Kd: 89.337
min_extrude_temp: 170
#min_extrude_temp: 1
min_temp: 0
max_temp: 270

# !!Don't forget to update TEMPADJUSTPA macro!!

##Dragon
#PLA
#pressure_advance: 0.0325
#PETG
#pressure_advance: 0.0785
#ABS
pressure_advance: 0.05585

##Maxiwatt
#ABS
#pressure_advance: 0.0654
#PETG
# pressure_advance: 0.125

#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
pressure_advance_smooth_time: 0.040
 #   A time range (in seconds) to use when calculating the average
 #   extruder velocity for pressure advance. A larger value results in
 #   smoother extruder movements. This parameter may not exceed 200ms.
 #   This setting only applies if pressure_advance is non-zero. The
 #   default is 0.040 (40 milliseconds).
 
[firmware_retraction]
retract_length: 0.75
retract_speed: 50
unretract_extra_length: 0
unretract_speed: 30
 
#Afterburner
[tmc2209 extruder]
uart_pin: P1.9
microsteps: 16
interpolate: False
run_current: 0.6
hold_current: 0.55
sense_resistor: 0.110
stealthchop_threshold: 0
 
#JP
#[tmc2209 extruder]
#uart_pin: P1.9
#microsteps: 16
#interpolate: True
#run_current: 0.45
#hold_current: 0.4
#sense_resistor: 0.110
#stealthchop_threshold: 500

#Mobius
#[tmc2209 extruder]
#uart_pin: P1.9
#microsteps: 16
#interpolate: True
#run_current: 1.0
#hold_current: 1.0
#sense_resistor: 0.110
#stealthchop_threshold: 500

[probe]
# Inductive Probe
# Z height probe. One may define this section to enable Z height
# probing hardware. When this section is enabled, PROBE and
# QUERY_PROBE extended g-code commands become available. The probe
# section also creates a virtual "probe:z_virtual_endstop" pin. One
# may set the stepper_z endstop_pin to this virtual pin on cartesian
# style printers that use the probe in place of a z endstop.
pin: z:P1.24
#   Z_MAX on mcu_z
x_offset: 0.0
y_offset: 23.0
#   Offset (in mm) for inductive probe Y direction from nozzle
z_offset: 0.0
#   Offset (in mm) for inductive probe in Z height
speed: 20
#   Speed (in mm/s) of the Z axis when probing. The default is 5mm/s.
samples: 1
#   Number of times to probe a point
sample_retract_dist: 3.0
#   How far to retract (in mm) from the probe point for multi-probe samples
samples_result: average
#   The calculation method when sampling more than once - either
#   "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.

[fan]
# Print Cooling Fan - XYE board, Fan Pin
pin: P2.3
kick_start_time: 1
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
off_below: 0.05
cycle_time: 0.05

[heater_fan hotend_fan]
# Hotend Fan - XYE board, HE1 Connector
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 80.0
#If you are experiencing back flow, you can reduce fan_speed
fan_speed: 0.8
cycle_time: 0.05

[heater_fan controller_fan]
# Controller fan - Z board, HE1 Connector
pin: z:P2.4
kick_start_time: 0.500
heater: heater_bed
heater_temp: 45.0
cycle_time: 0.05

# [heater_fan exhaust_fan]
# # Exhaust fan
# pin: z:ar8
# #   D8 on mcu_z
# kick_start_time: 1
# heater: heater_bed
# heater_temp: 60.0


[temperature_fan chamber]
# Chamber temp and Exhaust fan
#   See the "temperature_fan" section in example-extras.cfg for a complete
#   description of this sections parameters.
pin: z:P2.7
#   D8 on mcu_z
max_power: 0.6
shutdown_speed: 0
cycle_time: 0.05
hardware_pwm: false
kick_start_time: 0.500
sensor_type: gigabyte_thermistor
sensor_pin: P0.23
min_temp: 0
max_temp: 70
#   The maximum range of valid temperatures (in Celsius) that the
#   sensor must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. Set this range just wide enough so
#   that reasonable temperatures do not result in an error. These
#   parameters must be provided.
target_temp: 50
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
min_speed: 0
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to for PID temperature fans.
#   The default is 0.3.
control: pid
pid_Kp: 40
pid_Ki: 0.2
pid_Kd: 0.1
pid_deriv_time: 2.0
#pid_integral_max:
#   The maximum "windup" the integral term may accumulate. The default
#   is to use the same value as max_power.
gcode_id: C
#   If set, the temperature will be reported in M105 queries using the
#   given id. The default is to not report the temperature via M105.

[heater_bed]
heater_pin: z:P2.3
#   D11 (servo) on mcu_z
sensor_type: NTC 100K MGB18-104F39050L32
#   NTC 100K MGB18-104F39050L32 is for Keenovo thermistors
sensor_pin: z:P0.23
#   T2 on mcu_z
#smooth_time: 1.0
max_power: 0.65
control: pid
pwm_cycle_time: 0.017
#   PID: Time in seconds for each software PWM cycle of the heater. It is
#   not recommended to set this unless there is an electrical
#   requirement to switch the heater faster than 10 times a second.
#   The default is 0.100 seconds.
#max_delta: 1
#   WATERMARK: On 'watermark' controlled heaters this is the number of degrees in
#   Celsius above the target temperature before disabling the heater
#   as well as the number of degrees below the target before
#   re-enabling the heater. The default is 2 degrees Celsius.
# TUNED PID VALUES
pid_kp = 42.877
pid_ki = 1.232
pid_kd = 373.033
min_temp: 0
max_temp: 110

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 60
#   This controls heater verification during initial heating.  Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 5
heating_gain: 2

# Safe Z homing. One may use this mechanism to home the Z axis at a
# specific XY coordinate. This is useful if the toolhead, for example
# has to move to the center of the bed before Z can be homed.
[safe_z_home]
home_xy_position: 269.65,349.8
#   A X,Y coordinate (e.g. 100,100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 300
#   Speed at which the toolhead is moved to the safe Z home coordinate.
#   The default is 50 mm/s
z_hop: 5
#   Lift the Z axis prior to homing. This is applied to any homing command,
#   even if it doesn't home the Z axis. If the Z axis is already homed and
#   the zhop would exceed the printer limits, the zhop is ignored. If a lift
#   has already been performed or the Z axis is known to be equally or higher
#   than this distance, the zhop is ignored. After homing Z completed, the
#   printhead is lifted to zhop, respecting the probe's z_offset.
#   The default is 0.0mm.
z_hop_speed: 15
#   Speed at which the Z axis is lifted prior to homing. The default is 20mm/s.
#move_to_previous: False
#   When set to True, xy are reset to their previous positions after z homing.
#   The default is False.

#[homing_override]
#axes: z
#set_position_z: 0
#gcode:
#   G90
#   G0 Z5 F600
#   G28 X Y
#   #   XY Location of the Z Endstop Switch
#   #   Update X0 and Y0 to your values (such as X157, Y305) after going through
#   #   Z Endstop Pin Location Definition step.
#   #   Z Endstop Pin Location Definition step.
#   G0 X275.6 Y350  F18000
#   G28 Z
#   G0 Z10 F1800

[quad_gantry_level]
#   Use QUAD_GANTRY_LEVEL to level a gantry.
gantry_corners:
   -53,0
   406,423
#   Min & Max gantry corners - measure from nozzle at MIN (0,0) and MAX (250,250) to respective belt positions
points:
	60,37
	60,267
	290,267
	290,37
#   Probe points
speed: 300
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 8
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5
retries: 5
#   number of times to retry if the stepper movements aren't within tolerance
retry_tolerance: 0.0051
#   if retries are enabled then retry if any z_stepper movement was greater
#   than the retry_tolerance
max_adjust: 10

[display]
# RepRapDiscount 128x64 Full Graphic Smart Controller
lcd_type: st7920
cs_pin: z:P1.19
sclk_pin: z:P1.20
sid_pin: z:P1.18
menu_timeout: 40
encoder_pins: ^z:P3.26, ^z:P3.25 
click_pin: ^!z:P0.28
#kill_pin: ^!z:P0.17

# Needed to prevent the speaker from whining
[output_pin beeper]
pin: z:P1.30

##FOLLOW THE FORUMULA FOR relative_reference_index, for example 7x7:
##[(7x7)-1] / 2 = 24
[bed_mesh]
speed: 300
horizontal_move_z: 8
#mesh_min: 30,30
#mesh_max: 320,320
mesh_min: 10,30
mesh_max: 340,320
probe_count: 7, 7
algorithm: bicubic
relative_reference_index: 24
#move_check_distance: 5
#split_delta_z: 0.0125
#fade_start: 0
#fade_end: 0
#fade_target: 0
#mesh_pps: 2,2
#bicubic_tension: 0.2

#Pause/Resume Functionality
[pause_resume]

[filament_switch_sensor my_sensor]
pause_on_runout: True
insert_gcode:
    M117 Insert Detected
runout_gcode:
	M117 Runout Detected
	M600
switch_pin: !P1.24

###   Macros   ###

#Conditional G28 (home if not already homed)
[gcode_macro CG28]
gcode:
   {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
   G28
   {% endif %}

[gcode_macro ZCG28]
gcode:
	{% if "z" not in printer.toolhead.homed_axes %}
	G28 Z
	{% endif %}

[gcode_macro PARKFRONT]
gcode:
	CG28                                  ; Home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   ; absolute positioning
	G0 X175 Y0 Z175 F18000
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
[gcode_macro PARKFRONTLOW]
gcode:
	CG28                                  ; Home if not already homed
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90                                   ; absolute positioning
	G0 X175 Y0 Z50 F18000
	RESTORE_GCODE_STATE NAME=PARKFRONT
	
[gcode_macro PARKREAR]
gcode:
	CG28                                  ; Home if not already homed
	SAVE_GCODE_STATE NAME=PARKREAR
	G90                                   ; absolute positioning
	G0 X0 Y350 Z300 F18000
	RESTORE_GCODE_STATE NAME=PARKREAR
	
[gcode_macro PARKCENTER]
gcode:
	CG28                                  ; Home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   ; absolute positioning
	G0 X175 Y175 Z175 F18000
	RESTORE_GCODE_STATE NAME=PARKCENTER
	
[gcode_macro PARKBED]
gcode:
	CG28                                  ; Home if not already homed
	SAVE_GCODE_STATE NAME=PARKBED
	G90                                   ; absolute positioning
	G0 X175 Y175 Z3 F18000
	RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro M141]
default_parameter_S: 0
default_parameter_P: 0
gcode:
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={S}

[gcode_macro G32]
gcode:
   M141 S60					      ; set chamber temp to 60C
   #BED_MESH_CLEAR
   CG28
   QUAD_GANTRY_LEVEL
   G28 Z0
   G0 X175 Y175 Z5 F18000
	
[gcode_macro ZDOWN]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[gcode_macro ZUP]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1
	
[gcode_macro TEMPADJUSTOFFSET]
#Not used currently
gcode:
	#PETG
	{% if printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
		SET_GCODE_OFFSET Z=0 MOVE=1
		SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1
	{% endif %}
	#PLA
	{% if printer.heater_bed.target <= 65 %}
		SET_GCODE_OFFSET Z=0 MOVE=1
		SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1
	{% endif %}
	
[gcode_macro TEMPADJUSTPADRAGON]
gcode:
	#ABS
	{% if printer.heater_bed.target >= 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.05585
	{% endif %}
	#PETG
	{% if printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.0785
	{% endif %}
	#PLA
	{% if printer.heater_bed.target <= 65 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.0325
	{% endif %}
	
[gcode_macro TEMPADJUSTPAMAXIWATT]
gcode:
	#ABS
	{% if printer.heater_bed.target >= 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.0654
	{% endif %}
	#PETG
	{% if printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
		SET_PRESSURE_ADVANCE ADVANCE=0.125
	{% endif %}
	#PLA
	{% if printer.heater_bed.target <= 65 %}
		#SET_PRESSURE_ADVANCE ADVANCE=???
	{% endif %}
 
[gcode_macro BEDMESHPROCEDURE]
gcode:
	G32
	BED_MESH_CALIBRATE
	BED_MESH_PROFILE SAVE={printer.heater_bed.target}C
	SAVE_CONFIG

[gcode_macro BEDMESHLOAD]
gcode:
	BED_MESH_PROFILE LOAD={printer.heater_bed.target}C

[gcode_macro UNLOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
gcode:
	SAVE_GCODE_STATE NAME=UNLOADFILAMENT
	M83                                   ; set extruder to relative
	G1 E1 F300                            ; (CAUSING CLOGS AT 10mm?) extrude a little to soften tip 
	##Afterburner
		G1 E-100 F1800                    ; retract filament completely
	##JP
		#G1 E-500 F1800                   ; retract filament completely
	##MOBIUS
		#G1 E-915 F1800                   ; retract filament completely
	RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
#   Extrusion lengths must be adjusted for your particular configuration before use
gcode:
	SAVE_GCODE_STATE NAME=LOADFILAMENT
	M83 ; set extruder to relative
	##Afterburner
		G1 E45 F300                       ; quickly load filament to down filament path
	##JP
		#G1 E400 F1800                    ; quickly load filament to down bowden
	##MOBIUS
		#G1 E865 F1800                    ; quickly load filament to down bowden
	G1 E20 F300                           ; slower extrusion for hotend path
	G1 E20 F150                           ; prime nozzle with filament
	RESTORE_GCODE_STATE NAME=LOADFILAMENT
   
[gcode_macro HOT_UNLOAD]
default_parameter_S: 230
gcode:
	M104 S{S}
	PARKFRONTLOW
	M109 S{S}
    UNLOAD_FILAMENT
	
[gcode_macro HOT_LOAD]
default_parameter_S: 230
gcode:
	M104 S{S}
	PARKFRONTLOW
	M109 S{S}
    LOAD_FILAMENT
   
[gcode_macro M600]
default_parameter_X: 175
default_parameter_Y: 0
default_parameter_Z: 20
gcode:
	SAVE_GCODE_STATE NAME=ADVANCEDPAUSE
	PAUSE
	G91
	G1 Z{Z} F900
	G90
	G1 X{X} Y{Y} F18000
	RESTORE_GCODE_STATE NAME=ADVANCEDPAUSE
 
[gcode_macro ADVANCED_RESUME]
default_parameter_E: 2.5
default_parameter_Z: -20
gcode:
	SAVE_GCODE_STATE NAME=ADVANCEDRESUME
	G91
	G1 Z{Z} E{E} F900
	RESTORE_GCODE_STATE NAME=ADVANCEDRESUME
	RESUME

[gcode_macro EXERCISE]
default_parameter_I: 3
gcode:
	SAVE_GCODE_STATE NAME=EXERCISE
	CG28
	M106 S255                        ; enable fan to circulate air
	G90                              ; absolute positioning
	G0 X175 Y10 Z5 F18000
	{% for wipe in range(I|int) %}
		#Fast up/down diagonal
		{% for coordinate in [(175,350,315),(175,10,5)] %}
			;G0 X{coordinate[0]} Y{coordinate[1]} Z{coordinate[2]} F18000
			;M105                     ; keepalive (temp report)
		{% endfor %}
		#Slow up/down diagonal
		{% for coordinate in [(175,350,315),(175,10,5)] %}
			G0 X{coordinate[0]} Y{coordinate[1]} Z{coordinate[2]} F900
			M105                     ; keepalive (temp report)
		{% endfor %}
	{% endfor %}
	M106 S0                          ; disable fan
	RESTORE_GCODE_STATE NAME=EXERCISE
	
[gcode_macro BEEP]
default_parameter_I: 1
default_parameter_BEEPMS: 100
default_parameter_WAITMS: 100
gcode:
    {% for beep in range(I|int) %}
        SET_PIN PIN=beeper VALUE=1
        G4 P{BEEPMS}
        SET_PIN PIN=beeper VALUE=0
		G4 P{WAITMS}
    {% endfor %}

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
default_parameter_BED: 105
default_parameter_HOTEND: 230
default_parameter_CHAMBER: 60
gcode:
	PARKBED
	M117 Heating...
	M141 S{CHAMBER}                     ; set chamber temp
	M140 S{BED} 						; set bed final temp
	M104 S{HOTEND} 						; set hotend final temp
	M190 S{BED} 						; wait for bed final temp
	
	###EXERCISE##
	M117 Exercising...
	EXERCISE I=1						; "exercise" Z belts
	M117 Heating...
	##############
	
	M109 S{HOTEND} 						; wait for hotend final temp
	M117 Leveling...
	G90                                 ; absolute positioning
	G32									; QGL
	M117 Probing...
	BED_MESH_CALIBRATE
	G1 X1.2 Y20 Z5 F18000.0             ; Move above start position


	TEMPADJUSTPADRAGON					; change PA based on bed temp (Dragon)
	#TEMPADJUSTPAMAXIWATT				; change PA based on bed temp (Maxiwatt)
	#TEMPADJUSTOFFSET                   ; lower Z offset for PLA/PETG
	#BED_MESH_PROFILE LOAD=105C
	#BEDMESHLOAD
	
	M117 Printing...
	G92 E0                              ; Reset Extruder
	G1 Z2.0 F3000                       ; Move Z Axis up
	G1 X1.2 Y20 Z0.3 F18000.0           ; Move to start position
	G1 X1.2 Y200.0 Z0.3 F1500.0 E15     ; Draw the first line
	G1 X1.5 Y200.0 Z0.3 F18000.0        ; Move to side a little
	G1 X1.5 Y20 Z0.3 F1500.0 E30        ; Draw the second line
	G92 E0                              ; Reset Extruder
	G1 Z2.0 F3000                       ; Move Z Axis up
	
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
	M141 S38                       ; set chamber temp to 38C
	M400                           ; wait for buffer to clear
	G92 E0                         ; zero the extruder
	G10                            ; retract filament
	G91                            ; relative positioning
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z5 F3000                    ; move nozzle up 5mm
    G90                            ; absolute positioning
    G0  X175 Y350 F3600            ; park nozzle at rear
    M117 Finished!                 ; display message
	BED_MESH_CLEAR
	SET_GCODE_OFFSET Z=0

# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950"
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = -0.5
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.776
#*# pid_ki = 1.086
#*# pid_kd = 130.172

