###### Config options ######

[gcode_macro bedfanvars]
variable_threshold: 105		# Temp threshold to use bed fans
variable_innerfast: 0.5		# Fast speeds once bed temp is reached
variable_outerfast: 0.6
variable_innerslow: 0.2		# Slow speeds for when bed temp isn't yet reached
variable_outerslow: 0.2
gcode:

############################

[fan_generic BedInner]
pin: aux:ar10
cycle_time: 0.05
kick_start_time: 0.5

[fan_generic BedOuter]
pin: aux:ar9
cycle_time: 0.05
kick_start_time: 0.5

# Override M190 (Wait for Bed Temperature)
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold %}
	{% set INNERFAST = printer["gcode_macro bedfanvars"].innerfast %}
	{% set OUTERFAST = printer["gcode_macro bedfanvars"].outerfast %}
	{% set INNERSLOW = printer["gcode_macro bedfanvars"].innerslow %}
	{% set OUTERSLOW = printer["gcode_macro bedfanvars"].outerslow %}
	
	# Pre-heating fan speeds
	{% if S >= THRESHOLD %}
		SET_FAN_SPEED FAN=BedInner SPEED={INNERSLOW}		# >= Threshold temp: 
		SET_FAN_SPEED FAN=BedOuter SPEED={OUTERSLOW}		# 	Low speed fans while heating 
	{% else %}
		SET_FAN_SPEED FAN=BedInner SPEED=0					# < Threshold temp: 
		SET_FAN_SPEED FAN=BedOuter SPEED=0	            	#	Turn bed fans off
	{% endif %}                                        

	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}		# Set bed temp
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S} 			# Wait for bed temp

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		SET_FAN_SPEED FAN=BedInner SPEED={INNERFAST}		# >= Threshold temp: 
		SET_FAN_SPEED FAN=BedOuter SPEED={OUTERFAST}		#	Higher speed fans after heating finished
	{% endif %}
	
# Override M140 (Set Bed Temperature)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|int %}
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold %}
	{% set INNERSLOW = printer["gcode_macro bedfanvars"].innerslow %}
	{% set OUTERSLOW = printer["gcode_macro bedfanvars"].outerslow %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}		# Set bed temp
	
	{% if S >= THRESHOLD %}
		SET_FAN_SPEED FAN=BedInner SPEED={INNERSLOW}		# >= Threshold temp: 
		SET_FAN_SPEED FAN=BedOuter SPEED={OUTERSLOW}		# 	Low speed fans while heating 
		UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=1    	# 	Begin loop waiting for fans to reach temp
	{% else %}
		SET_FAN_SPEED FAN=BedInner SPEED=0					# < Threshold temp: 
		SET_FAN_SPEED FAN=BedOuter SPEED=0					#	Turn bed fans off
		UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=0		#	Cancel bed fan loop if it's running
	{% endif %}

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode bedfanloop]
gcode:
	# Parameters
	{% set THRESHOLD = printer["gcode_macro bedfanvars"].threshold %}
	{% set INNERFAST = printer["gcode_macro bedfanvars"].innerfast %}
	{% set OUTERFAST = printer["gcode_macro bedfanvars"].outerfast %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature >= (printer.heater_bed.target-1) %}
			SET_FAN_SPEED FAN=BedInner SPEED={INNERFAST}						# If within 1 degree of target temp: 
			SET_FAN_SPEED FAN=BedOuter SPEED={OUTERFAST}						#	Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=bedfanloop DURATION=5							# If temp not reached yet: loop again
		{% endif %}
	{% endif %}