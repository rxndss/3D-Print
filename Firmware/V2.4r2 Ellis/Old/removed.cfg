#[filament_switch_sensor runout_sensor]
#pause_on_runout: True
#insert_gcode:
#    #M117 Insert Detected
#runout_gcode:
#	#M117 Runout Detected
#	M600
#	BEEP I=12
#switch_pin: !P1.24

##[safe_z_home]
##home_xy_position: 269.6,356.5
##speed: 200
##z_hop: 10
##z_hop_speed: 15
##move_to_previous: False

##[homing_override]
##axes: z
##set_position_z: 0
##gcode:
##	SAVE_GCODE_STATE NAME=G28Z
##	SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.3 HOLDCURRENT=0.3		; lower z stepper current (in case of crash)
##	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.3 HOLDCURRENT=0.3
##	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.3 HOLDCURRENT=0.3
##	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.3 HOLDCURRENT=0.3
##	G91 																; relative positioning
##	G0 Z10 F900 														; z hop
##	G90 																; absolute positioning
##	G28 X Y																; home xy first
##	#   XY Location of the Z Endstop Switch
##	G0 X269.6 Y356.5 F12000													; move to z endstop location
##	G28 Z																; home Z
##	G0 Z10 F900															; move up
##	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
##	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
##	SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
##	SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}	
##	RESTORE_GCODE_STATE NAME=G28Z

##[gcode_macro G28]
##rename_existing: G9928
##gcode:
##    #Parameters
##    {% set z = params.Z|default(1)|int %}
##    
##    # Lower Z stepper current (in case of crash)
##    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.3 HOLDCURRENT=0.3
##    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT=0.3 HOLDCURRENT=0.3
##    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT=0.3 HOLDCURRENT=0.3
##    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT=0.3 HOLDCURRENT=0.3
##
##    #If Z is specified (G28 Z)
##    {% if z == 0 %}
##        {% if "xy" not in printer.toolhead.homed_axes %}
##            G9928    ; home all
##        {% else %}
##            G9928 Z ; home z
##        {% endif %}
##    #If Z is not specified (G28)
##    {% else %}
##        G9928 ; home all
##    {% endif %}
##
##    # Return Z stepper current to configured value
##    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings["tmc2209 stepper_z"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z"].hold_current}
##    SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings["tmc2209 stepper_z1"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z1"].hold_current}
##    SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings["tmc2209 stepper_z2"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z2"].hold_current}
##    SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings["tmc2209 stepper_z3"].run_current} HOLDCURRENT={printer.configfile.settings["tmc2209 stepper_z3"].hold_current}   

#[display]
## RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#encoder_pins: ^z:P3.26, ^z:P3.25 
#click_pin: ^!z:P0.28
#menu_timeout: 60
#display_group: __voron_display

## Needed to prevent the speaker from whining
#[output_pin beeper]
#pin: z:P1.30

# Support for gcode arc (G2/G3) commands.
#[gcode_arcs]
#resolution: 0.02
#   An arc will be split into segments. Each segment's length will equal
#   the resolution in mm set above. Lower values will produce a finer arc,
#   but also more work for your machine. Arcs smaller than the configured
#   value will become straight lines. The default is 1mm.

#[gcode_macro BEDMESHPROCEDURE]
#gcode:
#	G32
#	BED_MESH_CALIBRATE
#	BED_MESH_PROFILE SAVE={printer.heater_bed.target}C
#	SAVE_CONFIG
#
#[gcode_macro BEDMESHLOAD]
#gcode:
#	BED_MESH_PROFILE LOAD={printer.heater_bed.target}C

## Change Z offset based on bed temp (when not using auto z calibration / virtual z endstop)
#[gcode_macro TEMPADJUSTOFFSET]
#gcode:
#	# ABS
#	{% if printer.heater_bed.target >= 100 %}
#		SET_GCODE_OFFSET Z=0 MOVE=1
#	{% endif %}
#	# PETG
#	{% if printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
#		SET_GCODE_OFFSET Z=0.05 MOVE=1
#	{% endif %}
#	# PLA
#	{% if printer.heater_bed.target <= 65 %}
#		SET_GCODE_OFFSET Z=0.075 MOVE=1
#	{% endif %}
