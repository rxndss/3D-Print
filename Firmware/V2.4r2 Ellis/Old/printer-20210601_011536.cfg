# Include other config files
[include .menu.cfg]
[include .lcd_tweaks.cfg]
[include .UART.cfg]
[include .macros.cfg]

[mcu]
# Mcu for X/Y/E steppers
serial: /dev/serial/by-id/usb-Klipper_lpc1768_2180000E011C3DAF27C6875CC62000F5-if00
# Obtain definition by "ls -l /dev/serial/by-id/"
# Some Arduinos clones (CH340) may require using "ls -l /dev/serial/by-path/"

[mcu z]
# Mcu for Z steppers
serial: /dev/serial/by-id/usb-Klipper_lpc1768_2260000E011C3DAF20C6875CC02000F5-if00 
# Obtain definition by "ls -l /dev/serial/by-id/"
# Some Arduinos clones (CH340) may require using "ls -l /dev/serial/by-path/"

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 3500
max_accel_to_decel: 3500
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 5

[board_pins z]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

[force_move]
enable_force_move: True

#[virtual_sdcard]
#path: ~/.octoprint/uploads/

[idle_timeout]
gcode:
   G91                          	 	; relative positioning
   G1 Z5 F18000.0                       ; move up 5mm
   G90                                  ; absolute positioning
   G1 X270.2 Y350 F18000.0              ; move toolhead to rear (above Z shaft)
   TURN_OFF_HEATERS						; turn off heaters
   M84                                  ; disable steppers
   SET_PIN PIN=chamber_fan VALUE=0		; turn off chamber fan
   M117
# 2 hrs
timeout: 7200

[stepper_x]
#connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
step_distance: 0.00625
endstop_pin: P1.28
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 120
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

[stepper_y]
#connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
step_distance: 0.00625
endstop_pin: P1.26
position_min: 0
position_endstop: 358
position_max: 358
homing_speed: 80
second_homing_speed: 25
homing_retract_dist: 5
homing_positive_dir: true

# Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: !z:P2.6
enable_pin: !z:P2.1
step_distance: 0.005
endstop_pin: z:P1.25
#   Z_MIN on mcu_z
#position_endstop = -0.4
#   Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
#   (+) value = endstop above Z0, (-) value = endstop below
position_max: 320
position_min: -10
#   Set to -5 to allow room for squaring gantry with quad_gantry_level
homing_speed: 15
second_homing_speed: 3.0
homing_retract_dist: 3.0
homing_positive_dir: false

# Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
step_distance: 0.005

# Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: !z:P2.11
enable_pin: !z:P0.21
step_distance: 0.005

# Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
step_distance: 0.005

[extruder]
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
# FORMULA: step_distance = old_e_steps * ((actual extruded distance) / 100)
#AB
#step_distance: 0.00234464210753151567560404595674
step_distance: 0.00239622423389720902046733496779
#Jetpack
#step_distance: 0.001730332899967829024064
#Galileo
#step_distance: 0.001443761429127815394165888
nozzle_diameter: 0.8
filament_diameter: 1.750
max_extrude_only_distance: 1000
#max_extrude_cross_section:
#max_extrude_only_velocity:
#max_extrude_only_accel:
heater_pin: P2.7
max_power: 1.0
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24
#smooth_time: 2.0
#control: pid
#pid_Kp: 16.430
#pid_Ki: 0.755
#pid_Kd: 89.337
min_extrude_temp: 0
min_temp: 0
max_temp: 270
# !!Don't forget to update TEMPADJUSTPA macro!!
pressure_advance: 0.06625
pressure_advance_smooth_time: 0.040
 #   A time range (in seconds) to use when calculating the average
 #   extruder velocity for pressure advance. A larger value results in
 #   smoother extruder movements. This parameter may not exceed 200ms.
 #   This setting only applies if pressure_advance is non-zero. The
 #   default is 0.040 (40 milliseconds).
 
# Support for gcode arc (G2/G3) commands.
#[gcode_arcs]
#resolution: 0.02
#   An arc will be split into segments. Each segment's length will equal
#   the resolution in mm set above. Lower values will produce a finer arc,
#   but also more work for your machine. Arcs smaller than the configured
#   value will become straight lines. The default is 1mm.

# Enables input shaping.
#[input_shaper]
#shaper_freq_x: 0
#   A frequency (in Hz) of the input shaper for X axis. This is usually a
#   resonance frequency of X axis that the input shaper should suppress.
#   For more complex shapers, like 2- and 3-hump EI input shapers, this
#   parameter can be set from different considerations.
#   The default value is 0, which disables input shaping for X axis.
#shaper_freq_y: 0
#   A frequency (in Hz) of the input shaper for Y axis. This is usually a
#   resonance frequency of Y axis that the input shaper should suppress.
#   For more complex shapers, like 2- and 3-hump EI input shapers, this
#   parameter can be set from different considerations.
#   The default value is 0, which disables input shaping for Y axis.
#shaper_type: mzv
#   A type of the input shaper to use for both X and Y axes. Supported shapers
#   are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei.
#   The default is mzv input shaper.
#shaper_type_x:
#shaper_type_y:
#   If shaper_type is not set, these two parameters can be used to configure
#   different input shapers for X and Y axes. The same values are supported
#   as for shaper_type parameter.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers to
#   improve vibration suppression. Should not be changed without some proper
#   measurements, e.g. with an accelerometer.
#   Default value is 0.1 which is a good all-round value for most printers.
 
[firmware_retraction]
retract_length: 0.75
retract_speed: 50
unretract_extra_length: 0
unretract_speed: 30
 
[probe]
pin: z:P1.24
x_offset: 0.0
y_offset: 23.0
z_offset: 0.0
speed: 10
samples: 1
#sample_retract_dist: 2
#samples_result: average
#   Either "median" or "average". The default is average.
#samples_tolerance: 0.100
#   The maximum Z distance (in mm) that a sample may differ from other
#   samples. If this tolerance is exceeded then either an error is
#   reported or the attempt is restarted (see
#   samples_tolerance_retries). The default is 0.100mm.
#samples_tolerance_retries: 0
#   The number of times to retry if a sample is found that exceeds
#   samples_tolerance. On a retry, all current samples are discarded
#   and the probe attempt is restarted. If a valid set of samples are
#   not obtained in the given number of retries then an error is
#   reported. The default is zero which causes an error to be reported
#   on the first sample that exceeds samples_tolerance.

[fan]
# Print Cooling Fan
pin: P2.3
kick_start_time: 1
off_below: 0.05
cycle_time: 0.05

[heater_fan hotend_fan]
# Hotend Fan
pin: P2.4
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 80
fan_speed: 0.6
cycle_time: 0.05

# Controller cooling fan (one may define any number of sections with a
# "controller_fan" prefix). A "controller fan" is a fan that will be
# enabled whenever its associated heater or any configured stepper
# driver is active. The fan will stop, whenever an idle_timeout is
# reached to ensure no overheating will occur after deactivating a
# watched component.
[controller_fan controller_fan]
pin: z:P2.4
#max_power:
#shutdown_speed:
cycle_time: 0.01
#hardware_pwm:
kick_start_time: 1
#   See the "fan" section in example.cfg for a description of the
#   above parameters.
fan_speed: 1
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 0
#   The ammount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and before
#   the idle_timeout is reached. The default is fan_speed.
#heater:
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".

[heater_bed]
heater_pin: z:P2.3
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: z:P0.23
#smooth_time: 1.0
max_power: 0.65
control: pid
pwm_cycle_time: 0.017
#max_delta: 1
#   WATERMARK: On 'watermark' controlled heaters this is the number of degrees in
#   Celsius above the target temperature before disabling the heater
#   as well as the number of degrees below the target before
#   re-enabling the heater. The default is 2 degrees Celsius.
# TUNED PID VALUES
pid_kp = 42.877
pid_ki = 1.232
pid_kd = 373.033
min_temp: 0
max_temp: 120

[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 60
#   This controls heater verification during initial heating.  Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[verify_heater extruder]
max_error: 120
check_gain_time: 20
hysteresis: 5
heating_gain: 2

[safe_z_home]
home_xy_position: 270.2,358
speed: 200
z_hop: 10
z_hop_speed: 15
#move_to_previous: False

[thermistor 10k_thermistor]
temperature1: 25
resistance1: 10000
temperature2: 45
resistance2: 4914
temperature3: 75
resistance3: 1925

[temperature_sensor chamber_temp]
sensor_type: 10k_thermistor
sensor_pin: P0.23
#min_temp:
#max_temp:
gcode_id: C

# Example: "SET_PIN PIN=my_pin VALUE=.1"
[output_pin chamber_fan]
pin: z:P2.7
pwm: True
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime.
value: 0
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
shutdown_value: 0
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
cycle_time: 0.05
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.

[quad_gantry_level]
gantry_corners:
	-57,-1
	407,423
points:
	60,37
	60,267
	290,267
	290,37
speed: 300
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

[display]
lcd_type: uc1701
cs_pin: z:EXP1_3
a0_pin: z:EXP1_4
rst_pin: z:EXP1_5
contrast: 63
encoder_pins: ^z:EXP2_5, ^z:EXP2_3
click_pin: ^!z:EXP1_2
display_group: __voron_display
menu_timeout: 60
 
# Example: "SET_PIN PIN=beeper VALUE=.8"
[output_pin beeper]
pin: z:EXP1_1
pwm: True
#static_value:
#   If this is set, then the pin is assigned to this value at startup
#   and the pin can not be changed during runtime.
value: 0
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
shutdown_value: 0
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
cycle_time: 0.0005
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.
 
[neopixel lcd]
pin: z:EXP1_6
chain_count: 3
color_order_GRB: False
initial_RED: 0.4
initial_GREEN: 0.4
initial_BLUE: 0.4
 
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
	SET_LED LED=lcd RED=1 GREEN=0.45 BLUE=0.4 INDEX=1 TRANSMIT=0
	SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=2 TRANSMIT=0
	SET_LED LED=lcd RED=0.25 GREEN=0.2 BLUE=0.15 INDEX=3

#[display]
## RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#encoder_pins: ^z:P3.26, ^z:P3.25 
#click_pin: ^!z:P0.28
#menu_timeout: 60
#display_group: __voron_display

## Needed to prevent the speaker from whining
#[output_pin beeper]
#pin: z:P1.30

##FOLLOW THE FORUMULA FOR relative_reference_index, for example 7x7:
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
mesh_min: 10,30
mesh_max: 340,320
speed: 300
horizontal_move_z: 2.6
probe_count: 7,7
algorithm: bicubic
relative_reference_index: 24
#fade_start: 0.5
#   Default is 1.0.
#fade_end: 2
#   Default is 0.0, which disables fade.
#fade_target: 0
#   The z position in which fade should converge.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
split_delta_z: 0.01
#split_delta_z: 0.0125
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: 0.2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

#Pause/Resume Functionality
[pause_resume]

[filament_switch_sensor runout_sensor]
pause_on_runout: True
insert_gcode:
    M117 Insert Detected
runout_gcode:
	M117 Runout Detected
	M600
switch_pin: !P1.24

# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950"
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
#   "AD595"
#   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.814
#*# pid_ki = 1.199
#*# pid_kd = 128.414
#*#
#*# [stepper_z]
#*# position_endstop = -0.44
