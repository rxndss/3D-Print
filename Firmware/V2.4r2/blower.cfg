##===========================================================================
##========================== Bed Fans Configuration =========================
##===========================================================================
    # This file provides Klipper G-Code macros. The snippets in this file
    # may be copied into the main printer.cfg file and customized.

        # Threshold	: A temperature (Celsius) that the fan will enabled.
		# Fast		: Fan speed fast
		# Slow		: Fan speed slow

    # RS, 2022 - VORON V2.4r2.
##=================================== End ===================================

[gcode_macro _BLOWERVARS]
variable_threshold: 100
variable_fast: 0.6
variable_slow: 0.05
gcode:

[fan_generic Blower]
pin: PD13
cycle_time: 0.01
kick_start_time: 0.1

[gcode_macro BLOWER_SLOW]
gcode:
	{% set SLOW = printer["gcode_macro _BLOWERVARS"].slow|float %}
	
	SET_FAN_SPEED FAN=Blower SPEED={SLOW}

[gcode_macro BLOWER_FAST]
gcode:
	{% set FAST = printer["gcode_macro _BLOWERVARS"].fast|float %}
	
	SET_FAN_SPEED FAN=Blower SPEED={FAST}

[gcode_macro BLOWER_OFF]
gcode:
	SET_FAN_SPEED FAN=Blower SPEED=0

# Override, set fan speeds to low and start monitoring loop.
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: _SET_HEATER_TEMPERATURE
gcode:
	# Parameters
	{% set HEATER = params.HEATER|default("None") %}
	{% set TARGET = params.TARGET|default(0)|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BLOWERVARS"].threshold|int %}
	
	{% if HEATER|lower == "extruder" %}
		M104 S{TARGET}
	{% elif HEATER|lower == "heater_bed" %}
		M99140 S{TARGET}
	{% else %}
		{action_respond_info("Heater %s not supported" % HEATER)}
	{% endif %}

	# Set fans to low if heater_bed temp is requested above threshold temp, and kick off monitoring loop.
	{% if HEATER|lower == "heater_bed" %}
		{% if TARGET >= THRESHOLD %}
			BLOWER_SLOW
			UPDATE_DELAYED_GCODE ID=blowerloop DURATION=1
		{% else %}
			BLOWER_OFF
			UPDATE_DELAYED_GCODE ID=blowerloop DURATION=0 #	Cancel bed fan loop if it's running
		{% endif %}
	{% endif %}
	
[gcode_macro M190]
rename_existing: M99190
gcode:
	# Parameters
	{% set S = params.S|int %}
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BLOWERVARS"].threshold|int %}
	
	{% if S >= THRESHOLD %}
		BLOWER_SLOW																# >= Threshold temp: Low speed fans while heating 
	{% else %}
		BLOWER_OFF																# < Threshold temp: Turn bed fans off
	{% endif %}                                        

	M140 {% for p in params
	  %}{'%s%s' % (p, params[p])}{%
	  endfor %}																	# Set bed temp
	  
	{% if S != 0 %}
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={S|int} MAXIMUM={S|int + 5}	# Wait for bed temp within 5 degrees
	{% endif %}

	# Post-heating fan speeds
	{% if S >= THRESHOLD %}								    
		BLOWER_FAST																# >= Threshold temp: Higher speed fans after heating finished
	{% endif %}
	
# Replace M140 (Set Bed Temperature) to just be an alias of SET_HEATER_TEMPERATURE (which has associated bed fan logic if enabled)
[gcode_macro M140]
rename_existing: M99140
gcode:
	# Parameters
	{% set S = params.S|float %}
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={S}
	
# Replace TURN_OFF_HEATERS
[gcode_macro TURN_OFF_HEATERS]
rename_existing: _TURN_OFF_HEATERS
gcode:
	BLOWER_OFF
	_TURN_OFF_HEATERS
	
################ Monitoring loop #####################

# Turns bed fans to "fast" speed once target bed temp is reached.
[delayed_gcode blowerloop]
gcode:
	# Vars
	{% set THRESHOLD = printer["gcode_macro _BLOWERVARS"].threshold|int %}
	
	{% if printer.heater_bed.target >= THRESHOLD %}								# Continue only if target temp greater than threshold.
		{% if printer.heater_bed.temperature|int >= (printer.heater_bed.target|int - 1) %}
			BLOWER_FAST															# If within 1 degree of target temp: Higher speed fans
		{% else %}
			UPDATE_DELAYED_GCODE ID=blowerloop DURATION=5						# If temp not reached yet: loop again
		{% endif %}
	{% endif %}
